<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BizResultMapper">

    <!--

		SELECT (월별 부서)

	-->

    <!--  영업부서별 실적현황 조회 -->
    <select id="selectExpectDeptStatsList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.BusinessResultVO">

        SELECT DEPT_ID, DEPT_NM, DEPT_L1_ID AS DEPT_LVL1_ID, DEPT_L1_NM AS DEPT_LVL1_NM, DEPT_L2_ID AS DEPT_LVL2_ID, DEPT_L2_NM AS DEPT_LVL2_NM,
            BRSL_DST_CD, IBIZ_COM_CD_NM('BRSL_DST_CD',BRSL_DST_CD) AS BRSL_DST_CD_NM,
            YRLY_GOAL_RSL_AMT, YRLY_OPPTY_RSL_AMT, YRLY_FCST_RSL_AMT, YRLY_BRSL_RSL_AMT,
            STD_GOAL_RSL_AMT, STD_OPPTY_RSL_AMT, STD_FCST_RSL_AMT, STD_BRSL_RSL_AMT,
            ACML_GOAL_RSL_AMT, ACML_OPPTY_RSL_AMT, ACML_FCST_RSL_AMT, ACML_BRSL_RSL_AMT,
            RSDN_GOAL_RSL_AMT, RSDN_OPPTY_RSL_AMT, RSDN_FCST_RSL_AMT, (ACML_BRSL_RSL_AMT+RSDN_FCST_RSL_AMT) AS RSDN_BRSL_RSL_AMT
        FROM (
                SELECT H10.DEPT_L1_ID, H10.DEPT_L1_NM,
                <if test='subDept == "N" '>
                    H10.DEPT_L1_ID AS DEPT_L2_ID, H10.DEPT_L1_NM AS DEPT_L2_NM, H10.DEPT_L1_ID AS DEPT_ID, H10.DEPT_L1_NM AS DEPT_NM, -- ★하위부서 미포함
                </if>
                <if test='subDept == "Y" '>
                    H10.DEPT_L2_ID, H10.DEPT_L2_NM, H10.DEPT_ID, H10.DEPT_NM, H10.DEPT_SEQC, -- ★하위부서 포함
                </if>
                H10.BRSL_DST_CD, H10.BRSL_SEQC, -- 사업실적구분코드
                <![CDATA[
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' THEN RSL_AMT ELSE 0 END) AS YRLY_GOAL_RSL_AMT, -- 연간_목표
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' THEN RSL_AMT ELSE 0 END) AS YRLY_OPPTY_RSL_AMT, -- 연간_기회(확률미적용)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' THEN RSL_AMT ELSE 0 END) AS YRLY_FCST_RSL_AMT, -- 연간_예상(확률적용)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' THEN RSL_AMT ELSE 0 END) AS YRLY_BRSL_RSL_AMT, -- 연간_실적
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_GOAL_RSL_AMT, -- 기준월_목표
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_OPPTY_RSL_AMT, -- 기준월_기회(확률미적용)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_FCST_RSL_AMT, -- 기준월_예상(확률적용)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_BRSL_RSL_AMT, -- 기준월_실적
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_GOAL_RSL_AMT, -- 누적_목표 (1월~기준월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_OPPTY_RSL_AMT, -- 누적_기회(확률미적용) (1월~기준월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_FCST_RSL_AMT, -- 누적_예상(확률적용) (1월~기준월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_BRSL_RSL_AMT, -- 누적_실적 (1월~기준월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) AS RSDN_GOAL_RSL_AMT, -- 잔여_누적목표 (1월~잔여종료월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) AS RSDN_OPPTY_RSL_AMT, -- 잔여_기회(확률미적용) (잔여시작월~잔여종료월의 기회)

                       CASE WHEN #{fromDate} < #{rsdnStartDate} THEN -- (기준월 < 잔여시작월)이면, 잔여시작월~잔여종료일 조회 ELSE 기준월+1~잔여종료일 조회
                            SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) -- 잔여_예상(확률적용) (잔여시작월~잔여종료월의 예상)
                            + (
                                SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_예상(확률적용)
                                - SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_실적
                            )
                       ELSE
                            (
                                SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_예상(확률적용)
                                - SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_실적
                            )
                       END AS RSDN_FCST_RSL_AMT -- 잔여_예상(확률적용)
                ]]>
                -- ★★Comma 이동 END (반영 후 지울 것)
                FROM BRST120V RV, --실시간 매출매입 반영 VIEW
                --FROM BRST120V RV,
                ( SELECT DEPT_SEQC, DEPT_ID, DEPT_NM, -- DEPT_LVL, HGRK_DEPT_ID
                    C.BRSL_SEQC, C.BRSL_DST_CD, C.BRSL_DTL_DST_CD, -- 사업실적구분코드, 사업실적상세구분코드
                    <![CDATA[
                                   CASE WHEN DEPT_LVL = 1 THEN DEPT_ID ELSE SUBSTRB(DEPT_ID_PATH,2,INSTRB(DEPT_ID_PATH,'@',1,2)-2) END AS DEPT_L1_ID,
                                   CASE WHEN DEPT_LVL = 1 THEN DEPT_NM ELSE SUBSTRB(DEPT_NM_PATH,2,INSTRB(DEPT_NM_PATH,'@',1,2)-2) END AS DEPT_L1_NM,
                                   CASE WHEN DEPT_LVL < 3 THEN DEPT_ID
                                        ELSE SUBSTRB(DEPT_ID_PATH,INSTRB(DEPT_ID_PATH,'@',1,2)+1,DECODE(DEPT_LVL,2,LENGTH(DEPT_ID_PATH),INSTRB(DEPT_ID_PATH,'@',1,3)-1)-INSTRB(DEPT_ID_PATH,'@',1,2))
                                   END AS DEPT_L2_ID,
                                   CASE WHEN DEPT_LVL < 3 THEN DEPT_NM
                                        ELSE SUBSTRB(DEPT_NM_PATH,INSTRB(DEPT_NM_PATH,'@',1,2)+1,DECODE(DEPT_LVL,2,LENGTH(DEPT_NM_PATH),INSTRB(DEPT_NM_PATH,'@',1,3)-1)-INSTRB(DEPT_NM_PATH,'@',1,2))
                                   END AS DEPT_L2_NM
                              ]]>
                    FROM
                    ( SELECT ROWNUM AS DEPT_SEQC, LEVEL AS DEPT_LVL, DEPT_ID, DEPT_NM,
                        SYS_CONNECT_BY_PATH(DEPT_ID,'@') DEPT_ID_PATH,
                        SYS_CONNECT_BY_PATH(DEPT_NM,'@') DEPT_NM_PATH
                        FROM HMST110T A
                        WHERE (SELL_OCR_YN = 'Y' AND DEPT_LVL_CD = '5') -- 영업팀
                        START WITH DEPT_ID = #{deptId} AND CRIT_YEAR = #{critYear} --★조회조건: 영업부서, 기준연도
                        CONNECT BY (PRIOR DEPT_ID = HGRK_DEPT_ID AND PRIOR CRIT_YEAR = CRIT_YEAR
                        AND ( SELL_OCR_YN = 'Y'
                        OR EXISTS (SELECT 1 FROM HMST110T B   --★하위에 매출부서를 포함하고 있는 조직
                        WHERE SELL_OCR_YN = 'Y'
                        START WITH B.DEPT_ID = A.DEPT_ID AND CRIT_YEAR = A.CRIT_YEAR
                        CONNECT BY PRIOR B.DEPT_ID = B.HGRK_DEPT_ID AND PRIOR CRIT_YEAR = CRIT_YEAR) ) )
                        ORDER SIBLINGS BY DEPT_SORT_SEQC ) H,
                    ( SELECT HC10.SORT_SEQC AS BRSL_SEQC,
                        C10.COM_CD AS BRSL_DTL_DST_CD, C10.COM_CD_NM AS BRSL_DTL_DST_CD_NM, -- 사업실적상세구분코드
                        HC10.COM_CD AS BRSL_DST_CD, HC10.COM_CD_NM AS BRSL_DST_CD_NM -- 사업실적구분코드
                        FROM ACOM020T C20, ACOM010T C10, ACOM010T HC10
                        WHERE C20.CLMN_NM = 'BRSL_DTL_DST_CD'
                        AND C20.COM_GRP_CD = C10.COM_GRP_CD
                        AND C10.USE_YN = 'Y'
                        AND C10.HGRK_COM_GRP_CD = HC10.COM_GRP_CD
                        AND C10.HGRK_COM_CD = HC10.COM_CD ) C
                ) H10
                WHERE SUBSTR(RV.CRIT_YAM(+),1,4) = #{critYear}  -- ★조회조건 기준연도
                AND H10.DEPT_ID = RV.DEPT_ID(+)
                AND H10.BRSL_DTL_DST_CD = RV.BRSL_DTL_DST_CD(+)
                <if test='bsnsClsfCd != null and bsnsClsfCd != "" '>
                    AND RV.BSNS_CLSF_CD = #{bsnsClsfCd}  -- ★조회조건 사업분류
                </if>
                GROUP BY H10.DEPT_L1_ID, H10.DEPT_L1_NM
                <if test='subDept == "Y" '>
                    ,H10.DEPT_L2_ID, H10.DEPT_L2_NM, H10.DEPT_ID, H10.DEPT_NM, H10.DEPT_SEQC -- ★하위부서 포함
                </if>
                ,H10.BRSL_DST_CD, H10.BRSL_SEQC
                <if test='subDept == "Y" '>
                    ORDER BY H10.DEPT_SEQC, H10.BRSL_SEQC -- ★하위부서 포함
                </if>
        )
        <if test='subDept == "Y" '>
            ORDER BY DEPT_SEQC, BRSL_SEQC -- ★하위부서 포함
        </if>
        <if test='subDept == "N" '>
            ORDER BY BRSL_SEQC  -- ★하위부서 미포함
        </if>
    </select>


    <!--  영업대표별 실적현황 조회 -->
    <select id="selectExpectEmployeeStatsList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.BusinessResultVO">
        SELECT DEPT_ID, DEPT_NM, EMP_ID, IBIZ_EMP_NM(EMP_ID) AS EMP_NM,
               BRSL_DST_CD, IBIZ_COM_CD_NM('BRSL_DST_CD',BRSL_DST_CD) BRSL_DST_CD_NM,
               YRLY_GOAL_RSL_AMT, YRLY_OPPTY_RSL_AMT, YRLY_FCST_RSL_AMT, YRLY_BRSL_RSL_AMT,
               STD_GOAL_RSL_AMT, STD_OPPTY_RSL_AMT, STD_FCST_RSL_AMT, STD_BRSL_RSL_AMT,
               ACML_GOAL_RSL_AMT, ACML_OPPTY_RSL_AMT, ACML_FCST_RSL_AMT, ACML_BRSL_RSL_AMT,
               RSDN_GOAL_RSL_AMT, RSDN_OPPTY_RSL_AMT, RSDN_FCST_RSL_AMT, (ACML_BRSL_RSL_AMT+RSDN_FCST_RSL_AMT) RSDN_BRSL_RSL_AMT
          FROM (
                SELECT H30.DEPT_ID, H30.DEPT_NM, H30.DEPT_SEQC, H30.EMP_ID, -- 실적부서, 실적사원
                       H30.BRSL_DST_CD, H30.BRSL_SEQC,  -- 사업실적구분코드
                <![CDATA[
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' THEN RSL_AMT ELSE 0 END) AS YRLY_GOAL_RSL_AMT, -- 연간_목표
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' THEN RSL_AMT ELSE 0 END) AS YRLY_OPPTY_RSL_AMT, -- 연간_기회(확률미적용)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' THEN RSL_AMT ELSE 0 END) AS YRLY_FCST_RSL_AMT, -- 연간_예상(확률적용)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' THEN RSL_AMT ELSE 0 END) AS YRLY_BRSL_RSL_AMT, -- 연간_실적
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_GOAL_RSL_AMT, -- 기준월_목표
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_OPPTY_RSL_AMT, -- 기준월_기회(확률미적용)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_FCST_RSL_AMT, -- 기준월_예상(확률적용)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_BRSL_RSL_AMT, -- 기준월_실적
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_GOAL_RSL_AMT, -- 누적_목표 (1월~기준월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_OPPTY_RSL_AMT, -- 누적_기회(확률미적용) (1월~기준월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_FCST_RSL_AMT, -- 누적_예상(확률적용) (1월~기준월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_BRSL_RSL_AMT, -- 누적_실적 (1월~기준월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) AS RSDN_GOAL_RSL_AMT, -- 잔여_누적목표 (1월~잔여종료월)
                       SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) AS RSDN_OPPTY_RSL_AMT, -- 잔여_기회(확률미적용) (잔여시작월~잔여종료월의 기회)
                       CASE WHEN #{fromDate} < #{rsdnStartDate} THEN -- (기준월 < 잔여시작월)이면, 잔여시작월~잔여종료일 조회 ELSE 기준월+1~잔여종료일 조회
                            SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) -- 잔여_예상(확률적용) (잔여시작월~잔여종료월의 예상)
                       ELSE
                            SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(#{fromDate},'YYYYMM'),1),'YYYYMM') AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) -- 잔여_예상(확률적용) (기준월+1~잔여종료월의 예상)
                            + SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'U' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) -- 잔여_예상(확률적용) (잔여시작월~기준월의 Unsold)
                       END AS RSDN_FCST_RSL_AMT -- 잔여_예상(확률적용)
                ]]>
        -- ★★Comma 이동 END (반영 후 지울 것)
                  --FROM BRST130V RV,
                    FROM BRST130V RV,
                      ( SELECT H3.DEPT_ID, H3.DEPT_NM, H3.DEPT_SEQC, H3.EMP_ID,
                               BRSL_SEQC, BRSL_DST_CD, BRSL_DST_CD_NM, BRSL_DTL_DST_CD, BRSL_DTL_DST_CD_NM -- 사업실적구분코드, 사업실적상세구분코드
                          FROM
                              ( SELECT P.DEPT_ID, H.DEPT_NM, H.DEPT_SEQC, P.EMP_ID --, BSNS_CLSF_CD, BRSL_DTL_DST_CD, RSL_AMT
                                  FROM BRST130T P,
                                      ( SELECT ROWNUM AS DEPT_SEQC, DEPT_ID, DEPT_NM --▶, ORG_CRT_DATE, ORG_CLOSE_DATE
                                          FROM HMST110T A
                                         WHERE (SELL_OCR_YN = 'Y' AND DEPT_LVL_CD = '5') -- 영업팀
                                        START WITH DEPT_ID = #{deptId} AND CRIT_YEAR = #{critYear} --★조회조건: 영업부서, 기준연도
                                        CONNECT BY (PRIOR DEPT_ID = HGRK_DEPT_ID AND PRIOR CRIT_YEAR = CRIT_YEAR
                                                     AND ( SELL_OCR_YN = 'Y'
                                                          OR EXISTS (SELECT 1 FROM HMST110T B   --★하위에 매출부서를 포함하고 있는 조직
                                                                      WHERE SELL_OCR_YN = 'Y'
                                                                     START WITH B.DEPT_ID = A.DEPT_ID AND CRIT_YEAR = A.CRIT_YEAR
                                                                     CONNECT BY PRIOR B.DEPT_ID = B.HGRK_DEPT_ID AND PRIOR CRIT_YEAR = CRIT_YEAR) ) )
                                        ORDER SIBLINGS BY DEPT_SORT_SEQC ) H
                                 WHERE SUBSTR(P.CRIT_YAM,1,4) = #{critYear}  -- ★조회조건 기준연도
                                   AND P.DEPT_ID = H.DEPT_ID
                                GROUP BY P.DEPT_ID, H.DEPT_NM, H.DEPT_SEQC, P.EMP_ID ) H3,
                              ( SELECT HC10.SORT_SEQC AS BRSL_SEQC,
                                       C10.COM_CD AS BRSL_DTL_DST_CD, C10.COM_CD_NM AS BRSL_DTL_DST_CD_NM, -- 사업실적상세구분코드
                                       HC10.COM_CD AS BRSL_DST_CD, HC10.COM_CD_NM AS BRSL_DST_CD_NM -- 사업실적구분코드
                                  FROM ACOM020T C20, ACOM010T C10, ACOM010T HC10
                                 WHERE C20.CLMN_NM = 'BRSL_DTL_DST_CD'
                                   AND C20.COM_GRP_CD = C10.COM_GRP_CD
                                  AND C10.USE_YN = 'Y'
                                  AND C10.HGRK_COM_GRP_CD = HC10.COM_GRP_CD
                                  AND C10.HGRK_COM_CD = HC10.COM_CD ) C
                      ) H30
                 WHERE SUBSTR(RV.CRIT_YAM(+),1,4) = #{critYear}  -- ★조회조건 기준연도
                   AND H30.DEPT_ID = RV.DEPT_ID(+)
                   AND H30.EMP_ID = RV.EMP_ID(+)
                   AND H30.BRSL_DTL_DST_CD = RV.BRSL_DTL_DST_CD(+)
                    <if test='bsnsClsfCd != null and bsnsClsfCd != "" '>
                        AND RV.BSNS_CLSF_CD = #{bsnsClsfCd}  -- ★조회조건 사업분류
                    </if>
                GROUP BY H30.DEPT_ID, H30.DEPT_NM, H30.DEPT_SEQC, H30.EMP_ID,
                      H30.BRSL_DST_CD, H30.BRSL_SEQC
                )
        ORDER BY DEPT_SEQC, EMP_NM, EMP_ID, BRSL_SEQC

    </select>


    <!--  사업부문별 실적현황 조회  -->
    <select id="selectExpectBizGroupStatsList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.BusinessResultVO">

        WITH
        RV AS (
            SELECT CRIT_YAM, BSNS_CLSF_CD, BRSL_DTL_DST_CD, RSL_AMT
              FROM BRST120V
             WHERE SUBSTR(CRIT_YAM,1,4) = #{critYear}  -- ★조회조건 기준연도
               AND DEPT_ID IN (SELECT DEPT_ID FROM HMST110T
                                WHERE SELL_OCR_YN = 'Y' -- 매출발생부서
                               START WITH DEPT_ID = #{deptId} AND CRIT_YEAR = #{critYear}  -- ★조회조건 대상부서
                               CONNECT BY PRIOR DEPT_ID = HGRK_DEPT_ID AND PRIOR CRIT_YEAR = CRIT_YEAR)
        )
        SELECT BSNS_CLSF_CD, BSNS_CLSF_CD_NM AS BSNS_CLSF_CD_NM, --◀2020-02-24
               BRSL_DST_CD, BRSL_DST_CD_NM AS BRSL_DST_CD_NM, --◀2020-02-24
               YRLY_GOAL_RSL_AMT, YRLY_OPPTY_RSL_AMT, YRLY_FCST_RSL_AMT, YRLY_BRSL_RSL_AMT,
               STD_GOAL_RSL_AMT, STD_OPPTY_RSL_AMT, STD_FCST_RSL_AMT, STD_BRSL_RSL_AMT,
               ACML_GOAL_RSL_AMT, ACML_OPPTY_RSL_AMT, ACML_FCST_RSL_AMT, ACML_BRSL_RSL_AMT,
               RSDN_GOAL_RSL_AMT, RSDN_OPPTY_RSL_AMT, RSDN_FCST_RSL_AMT, (ACML_BRSL_RSL_AMT+RSDN_FCST_RSL_AMT) AS RSDN_BRSL_RSL_AMT
          FROM (
                 SELECT BC.BSNS_CLSF_CD, BC.BSNS_CLSF_CD_NM, BC.BSNS_SEQC, -- 사업분류코드 --◀2020-02-24
                        BC.BRSL_DST_CD, BC.BRSL_DST_CD_NM, BC.BRSL_SEQC, -- 사업실적구분코드 --◀2020-02-24
                    <![CDATA[
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' THEN RSL_AMT ELSE 0 END) AS YRLY_GOAL_RSL_AMT, -- 연간_목표
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' THEN RSL_AMT ELSE 0 END) AS YRLY_OPPTY_RSL_AMT, -- 연간_기회(확률미적용)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' THEN RSL_AMT ELSE 0 END) AS YRLY_FCST_RSL_AMT, -- 연간_예상(확률적용)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' THEN RSL_AMT ELSE 0 END) AS YRLY_BRSL_RSL_AMT, -- 연간_실적
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_GOAL_RSL_AMT, -- 기준월_목표
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_OPPTY_RSL_AMT, -- 기준월_기회(확률미적용)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_FCST_RSL_AMT, -- 기준월_예상(확률적용)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_BRSL_RSL_AMT, -- 기준월_실적
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_GOAL_RSL_AMT, -- 누적_목표 (1월~기준월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_OPPTY_RSL_AMT, -- 누적_기회(확률미적용) (1월~기준월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_FCST_RSL_AMT, -- 누적_예상(확률적용) (1월~기준월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_BRSL_RSL_AMT, -- 누적_실적 (1월~기준월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) AS RSDN_GOAL_RSL_AMT, -- 잔여_누적목표 (1월~잔여종료월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) AS RSDN_OPPTY_RSL_AMT, -- 잔여_기회(확률미적용) (잔여시작월~잔여종료월의 기회)

                       CASE WHEN #{fromDate} < #{rsdnStartDate} THEN -- (기준월 < 잔여시작월)이면, 잔여시작월~잔여종료일 조회 ELSE 기준월+1~잔여종료일 조회
                            SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) -- 잔여_예상(확률적용) (잔여시작월~잔여종료월의 예상)
                            + (
                                SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_예상(확률적용)
                                - SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_실적
                            )
                       ELSE
                            (
                                SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_예상(확률적용)
                                - SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_실적
                            )
                       END AS RSDN_FCST_RSL_AMT -- 잔여_예상(확률적용)
                    ]]>
                   FROM RV,
                        ( SELECT B.BSNS_SEQC, B.BSNS_CLSF_CD, B.BSNS_CLSF_CD_NM, --◀2020-02-24
                                 C.BRSL_SEQC, C.BRSL_DST_CD, C.BRSL_DST_CD_NM, C.BRSL_DTL_DST_CD --◀2020-02-24
                            FROM
                                 ( SELECT SORT_SEQC AS BSNS_SEQC,
                                          BSNS_CLSF_CD, BSNS_CLSF_CD_NM --◀2020-02-24
                                     FROM BRST004T T
                                    WHERE CRIT_YEAR = #{critYear} -- ★조회조건: 기준연도
                                      AND EXISTS (SELECT 1 FROM RV WHERE BSNS_CLSF_CD = T.BSNS_CLSF_CD) -- 목표 또는 기회 또는 실적이 존재하는 사업분류 (2020-01)
                                 ) B,
                                 ( SELECT HC10.SORT_SEQC AS BRSL_SEQC,
                                          C10.COM_CD BRSL_DTL_DST_CD, --C10.COM_CD_NM BRSL_DTL_DST_CD_NM,
                                          HC10.COM_CD BRSL_DST_CD, HC10.COM_CD_NM BRSL_DST_CD_NM --◀2020-02-24
                                     FROM ACOM020T C20, ACOM010T C10, ACOM010T HC10
                                    WHERE C20.CLMN_NM = 'BRSL_DTL_DST_CD'
                                      AND C20.COM_GRP_CD = C10.COM_GRP_CD
                                      AND C10.USE_YN = 'Y'
                                      AND C10.HGRK_COM_GRP_CD = HC10.COM_GRP_CD
                                      AND C10.HGRK_COM_CD = HC10.COM_CD
                                 ) C
                        ) BC
                  WHERE BC.BSNS_CLSF_CD = RV.BSNS_CLSF_CD(+)
                    AND BC.BRSL_DTL_DST_CD = RV.BRSL_DTL_DST_CD(+)
                 GROUP BY BC.BSNS_CLSF_CD, BC.BSNS_CLSF_CD_NM,  BC.BSNS_SEQC, --◀2020-02-24
                          BC.BRSL_DST_CD, BC.BRSL_DST_CD_NM, BC.BRSL_SEQC --◀2020-02-24
                )
        ORDER BY BSNS_SEQC, BRSL_SEQC

    </select>


    <!-- 상품별 실적현황 조회 -->
    <select id="selectExpectProdGroupStatsList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.BusinessResultVO">

        SELECT BRSL_DST_CD, BRSL_DST_CD_NM AS BRSL_DST_CD_NM,
        <if test='bsnsClsfCd == "" and bsnsClsfCd != null '>
            'AL' AS BSNS_CLSF_CD, '전체' AS BSNS_CLSF_CD_NM, --★조회조건: 사업분류코드(전체) --◀2020-02-24
        </if>
        <if test='bsnsClsfCd != "" and bsnsClsfCd != null '>
            BSNS_CLSF_CD, BSNS_CLSF_CD_NM AS BSNS_CLSF_CD_NM , --★조회조건: 사업분류코드(택1) --◀2020-02-24
        </if>
            PROD_DST_CD, PROD_DST_CD_NM AS PROD_DST_CD_NM, --◀2020-02-24
            YRLY_GOAL_RSL_AMT, YRLY_OPPTY_RSL_AMT, YRLY_FCST_RSL_AMT, YRLY_BRSL_RSL_AMT,
            STD_GOAL_RSL_AMT, STD_OPPTY_RSL_AMT, STD_FCST_RSL_AMT, STD_BRSL_RSL_AMT,
            ACML_GOAL_RSL_AMT, ACML_OPPTY_RSL_AMT, ACML_FCST_RSL_AMT, ACML_BRSL_RSL_AMT,
            RSDN_GOAL_RSL_AMT, RSDN_OPPTY_RSL_AMT, RSDN_FCST_RSL_AMT, (ACML_BRSL_RSL_AMT+RSDN_FCST_RSL_AMT) AS RSDN_BRSL_RSL_AMT
        FROM (
                SELECT BC.BRSL_DST_CD, BC.BRSL_DST_CD_NM, BC.BRSL_SEQC, -- 사업실적구분코드 --◀2020-02-24
                BC.PROD_DST_CD, BC.PROD_DST_CD_NM, BC.PROD_SEQC, -- 상품구분코드 --◀2020-02-24
                <if test='bsnsClsfCd != "" and bsnsClsfCd != null '>
                    BC.BSNS_CLSF_CD, BC.BSNS_CLSF_CD_NM, --★조회조건: 사업분류코드(택1) --◀2020-02-24
                </if>
                <![CDATA[
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' THEN RSL_AMT ELSE 0 END) AS YRLY_GOAL_RSL_AMT, -- 연간_목표
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' THEN RSL_AMT ELSE 0 END) AS YRLY_OPPTY_RSL_AMT, -- 연간_기회(확률미적용)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' THEN RSL_AMT ELSE 0 END) AS YRLY_FCST_RSL_AMT, -- 연간_예상(확률적용)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' THEN RSL_AMT ELSE 0 END) AS YRLY_BRSL_RSL_AMT, -- 연간_실적
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_GOAL_RSL_AMT, -- 기준월_목표
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_OPPTY_RSL_AMT, -- 기준월_기회(확률미적용)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_FCST_RSL_AMT, -- 기준월_예상(확률적용)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) AS STD_BRSL_RSL_AMT, -- 기준월_실적
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_GOAL_RSL_AMT, -- 누적_목표 (1월~기준월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_OPPTY_RSL_AMT, -- 누적_기회(확률미적용) (1월~기준월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_FCST_RSL_AMT, -- 누적_예상(확률적용) (1월~기준월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{fromDate} THEN RSL_AMT ELSE 0 END) AS ACML_BRSL_RSL_AMT, -- 누적_실적 (1월~기준월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'P' AND RV.CRIT_YAM BETWEEN #{janDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) AS RSDN_GOAL_RSL_AMT, -- 잔여_누적목표 (1월~잔여종료월)
                        SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'T' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) AS RSDN_OPPTY_RSL_AMT, -- 잔여_기회(확률미적용) (잔여시작월~잔여종료월의 기회)

                       CASE WHEN #{fromDate} < #{rsdnStartDate} THEN -- (기준월 < 잔여시작월)이면, 잔여시작월~잔여종료일 조회 ELSE 기준월+1~잔여종료일 조회
                            SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM BETWEEN #{rsdnStartDate} AND #{rsdnEndDate} THEN RSL_AMT ELSE 0 END) -- 잔여_예상(확률적용) (잔여시작월~잔여종료월의 예상)
                            + (
                                SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_예상(확률적용)
                                - SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_실적
                            )
                       ELSE
                            (
                                SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'F' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_예상(확률적용)
                                - SUM(CASE WHEN SUBSTR(RV.BRSL_DTL_DST_CD,2,1) = 'R' AND RV.CRIT_YAM = #{fromDate} THEN RSL_AMT ELSE 0 END) -- 기준월_실적
                            )
                       END AS RSDN_FCST_RSL_AMT -- 잔여_예상(확률적용)
                 ]]>
                FROM
                ( SELECT CRIT_YAM, BSNS_CLSF_CD, PROD_DST_CD, BRSL_DTL_DST_CD, RSL_AMT
                    FROM BRST120V
                    WHERE SUBSTR(CRIT_YAM,1,4) = #{critYear}  -- ★조회조건: 기준연도
                    <if test='bsnsClsfCd != "" and bsnsClsfCd != null '>
                    AND BSNS_CLSF_CD = #{bsnsClsfCd} --★조회조건: 사업분류코드(택1) --◀2020-02-24
                    </if>
                    AND DEPT_ID IN (SELECT DEPT_ID FROM HMST110T
                    WHERE SELL_OCR_YN = 'Y' -- 매출발생부서
                    START WITH DEPT_ID = #{deptId} AND CRIT_YEAR = #{critYear}  -- ★조회조건: 영업부서+기준연도
                    CONNECT BY PRIOR DEPT_ID = HGRK_DEPT_ID AND PRIOR CRIT_YEAR = CRIT_YEAR)
                ) RV,
                ( SELECT C.BRSL_SEQC, C.BRSL_DST_CD, C.BRSL_DST_CD_NM, C.BRSL_DTL_DST_CD, --◀2020-02-24
                        B.BSNS_SEQC, B.BSNS_CLSF_CD, B.BSNS_CLSF_CD_NM, --◀2020-02-24
                        D.PROD_SEQC, D.PROD_DST_CD, D.PROD_DST_CD_NM --◀2020-02-24
                        FROM
                        ( SELECT SORT_SEQC AS BSNS_SEQC,
                        BSNS_CLSF_CD, BSNS_CLSF_CD_NM
                        FROM BRST004T
                        WHERE CRIT_YEAR = #{critYear} -- ★조회조건: 기준연도
                        <if test='bsnsClsfCd != "" and bsnsClsfCd != null '>
                            AND BSNS_CLSF_CD = #{bsnsClsfCd} --★조회조건: 사업분류코드(택1) --◀2020-02-24
                        </if>
                        ) B,
                        ( SELECT SORT_SEQC AS PROD_SEQC,
                            C10.COM_CD PROD_DST_CD, C10.COM_CD_NM PROD_DST_CD_NM
                            FROM ACOM020T C20, ACOM010T C10
                            WHERE C20.CLMN_NM = 'PROD_DST_CD'
                            AND C20.COM_GRP_CD = C10.COM_GRP_CD
                            AND C10.USE_YN = 'Y'
                        ) D,
                        ( SELECT HC10.SORT_SEQC AS BRSL_SEQC,
                            C10.COM_CD BRSL_DTL_DST_CD, --C10.COM_CD_NM BRSL_DTL_DST_CD_NM,
                            HC10.COM_CD BRSL_DST_CD, HC10.COM_CD_NM BRSL_DST_CD_NM --◀2020-02-24
                            FROM ACOM020T C20, ACOM010T C10, ACOM010T HC10
                            WHERE C20.CLMN_NM = 'BRSL_DTL_DST_CD'
                            AND C20.COM_GRP_CD = C10.COM_GRP_CD
                            AND C10.USE_YN = 'Y'
                            AND C10.HGRK_COM_GRP_CD = HC10.COM_GRP_CD
                            AND C10.HGRK_COM_CD = HC10.COM_CD
                        ) C
                ) BC
                WHERE BC.BSNS_CLSF_CD = RV.BSNS_CLSF_CD(+)
                AND BC.BRSL_DTL_DST_CD = RV.BRSL_DTL_DST_CD(+)
                AND BC.PROD_DST_CD = RV.PROD_DST_CD(+)
                GROUP BY BC.BRSL_DST_CD, BC.BRSL_DST_CD_NM, BC.BRSL_SEQC, -- 사업실적구분코드 --◀2020-02-24
                <if test='bsnsClsfCd != "" and bsnsClsfCd != null '>
                    BC.BSNS_CLSF_CD, BC.BSNS_CLSF_CD_NM, --★조회조건: 사업분류코드(택1) --◀2020-02-24
                </if>
                BC.PROD_DST_CD, BC.PROD_DST_CD_NM, BC.PROD_SEQC -- 상품구분코드 --◀2020-02-24
        )
        ORDER BY BRSL_SEQC, PROD_SEQC
    </select>


    <!-- 수주 예상/실적 리스트 조회 -->
    <select id="selectWCTSalesReportList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.SalesReportVO">
        SELECT * FROM (
        SELECT COUNT(1) OVER() AS TOTAL_CNT,  ROWNUM AS ROWNUMBER, T.* FROM (
        SELECT  LAST_CUST_ID, LAST_CUST_NM, PRJT_ID, PRJT_NM, SLS_DEPT_ID, SLS_EMP_ID, SLS_EMP_NM,
            CNTR_DATE, BSNS_CLSF_CD, BSNS_CLSF_CD_NM, -- 사업분류코드
            WCT_PRBB_CD,  WCT_PRBB_CD_NM, -- 수주확률코드
            BOPT_STAT_CD, BOPT_STAT_CD_NM, -- 사업기회상태코드
            <if test='prodDstCd != null and prodDstCd != "" '>
                PROD_DST_CD, PROD_DST_CD_NM,  -- 상품구분코드  -- ★상품실적현황인 경우
            </if>
            SELL_OPPTY_RSL_AMT, -- 매출금액_기회
            BUY_OPPTY_RSL_AMT, -- 매입금액_기회
            SELL_FCST_RSL_AMT, -- 매출금액_확률적용
            BUY_FCST_RSL_AMT, -- 매입금액_확률적용
            SELL_RSL_AMT, -- 매출금액_실적
            BUY_RSL_AMT, -- 매입금액_실적
            ISSUE_CNT, BOPT_ID, BOPT_NM, BOPT_END_TYPE_CD, BOPT_END_TYPE_CD_NM, COM_CD_NUM_VAL,
            SUM(SELL_OPPTY_RSL_AMT) OVER() AS TOTAL_SELL_OPPTY_RSL_AMT, -- 매출금액_기회 총액
            SUM(BUY_OPPTY_RSL_AMT) OVER() AS TOTAL_BUY_OPPTY_RSL_AMT, -- 매입금액_기회 총액
            SUM(SELL_FCST_RSL_AMT) OVER() AS TOTAL_SELL_FCST_RSL_AMT, -- 매출금액_확률적용 총액
            SUM(BUY_FCST_RSL_AMT) OVER() AS TOTAL_BUY_FCST_RSL_AMT, -- 매입금액_확률적용 총액
            SUM(SELL_RSL_AMT) OVER() AS TOTAL_SELL_RSL_AMT,  -- 매출금액_실적 총액
            SUM(BUY_RSL_AMT) OVER() AS TOTAL_BUY_RSL_AMT  -- 매입금액_실적 총액
        FROM
        (
            SELECT P.LAST_CUST_ID, M.CUST_NM LAST_CUST_NM, P.PRJT_ID, P.PRJT_NM,
                P.SLS_DEPT_ID, P.SLS_EMP_ID, H.EMP_NM SLS_EMP_NM,
                P.CNTR_DATE,
                BSNS_CLSF_CD, IBIZ_COM_CD_NM('BSNS_CLSF_CD',P.BSNS_CLSF_CD) BSNS_CLSF_CD_NM, -- 사업분류코드
                WCT_PRBB_CD, IBIZ_COM_CD_NM('WCT_PRBB_CD',P.WCT_PRBB_CD) WCT_PRBB_CD_NM, -- 수주확률코드
                BOPT_STAT_CD, IBIZ_COM_CD_NM('BOPT_STAT_CD',P.BOPT_STAT_CD) BOPT_STAT_CD_NM, -- 사업기회상태코드
                <if test='prodDstCd != null and prodDstCd != "" '>
                    P.PROD_DST_CD, IBIZ_COM_CD_NM('PROD_DST_CD',P.PROD_DST_CD) PROD_DST_CD_NM,  -- 상품구분코드  -- ★상품실적현황인 경우
                </if>
                --GODS_CLSF_CD, IBIZ_COM_CD_NM('GODS_CLSF_CD',B.GODS_CLSF_CD) GODS_CLSF_NM,  -- 제품분류코드
                P.SELL_AMT AS SELL_OPPTY_RSL_AMT, -- 매출금액_기회
                P.BUY_AMT AS BUY_OPPTY_RSL_AMT, -- 매입금액_기회
                P.SELL_AMT*P.COM_CD_NUM_VAL  AS SELL_FCST_RSL_AMT, -- 매출금액_확률적용
                P.BUY_AMT*P.COM_CD_NUM_VAL AS BUY_FCST_RSL_AMT, -- 매입금액_확률적용
                DECODE(BOPT_STAT_CD,'E',P.SELL_AMT,0) AS SELL_RSL_AMT,  -- 매출금액_실적
                DECODE(BOPT_STAT_CD,'E',P.BUY_AMT,0) AS BUY_RSL_AMT,  -- 매입금액_실적
                (SELECT COUNT(BSNS_ISSUE_ID)
                    FROM BPIP200T
                    WHERE PRJT_ID = P.PRJT_ID
                    AND ISSUE_DLNG_STAT_CD IN ('A','B','C','D') -- 이슈처리상태: A.등록, B.계획수립, C.처리중, D.결과검토
                ) ISSUE_CNT,
                P.BOPT_ID, P.BOPT_NM,
                P.BOPT_END_TYPE_CD, IBIZ_COM_CD_NM('BOPT_END_TYPE_CD', P.BOPT_END_TYPE_CD) BOPT_END_TYPE_CD_NM,
                P.COM_CD_NUM_VAL
            FROM CMST000T M, HMST300T H,
            (
                SELECT C.LAST_CUST_ID, C.PRJT_ID, C.PRJT_NM, A.BOPT_ID, A.BOPT_NM, -- A.BOPT_NM,
                A.SLS_DEPT_ID, A.SLS_EMP_ID,
                A.CNTR_DATE, A.WCT_DCD_DATE, -- 계약일자, 수주확정일자
                A.BOPT_END_TYPE_CD,
                A.BSNS_CLSF_CD, A.WCT_PRBB_CD, A.BOPT_STAT_CD, S.COM_CD_NUM_VAL,
                <if test='prodDstCd != null and prodDstCd != "" '>
                    B.PROD_DST_CD, -- B.GODS_CLSF_CD, -- ★상품실적현황인 경우
                </if>
                NVL(SUM(B.SELL_AMT),0) SELL_AMT, -- 매출금액
                NVL(SUM(B.BUY_AMT),0) BUY_AMT -- 매입금액
                FROM BPIP000T A, BPIP020T B, APRJ000T C, ACOM010T S
                WHERE A.BOPT_ID = B.BOPT_ID(+)
                AND A.BOPT_STAT_CD != 'D1'
                AND (A.BOPT_STAT_CD = 'E' -- 계약완료
                OR (A.FCST_RFLC_YN = 'Y' -- 사업예상반영여부
                AND A.BOPT_STAT_CD != 'F'))-- 사업기회종료 제외
                AND A.PRJT_ID = C.PRJT_ID
                AND C.PRJT_STAT_CD NOT LIKE 'F%' --F1.사업이관, F2.사업폐기
                AND C.PRJT_STAT_CD NOT LIKE 'D%' --D1.일반삭제, D2.중복삭제
                AND S.COM_GRP_CD = (SELECT COM_GRP_CD FROM ACOM020T WHERE CLMN_NM = 'WCT_PRBB_CD') -- 수주확률코드
                AND A.WCT_PRBB_CD = S.COM_CD
                <if test='prjtTypeCd != null and prjtTypeCd != "" '>
                    AND C.PRJT_TYPE_CD = #{prjtTypeCd}
                </if>

                AND SUBSTR(A.CNTR_DATE,1,6) BETWEEN #{fromDate} AND #{toDate} -- 조회조건_기간
                <if test='slsDeptId != null and slsDeptId != "" '>
                    AND A.SLS_DEPT_ID  in (
                    SELECT DEPT_ID FROM HMST110T
                    WHERE SELL_OCR_YN = 'Y' -- 매출발생부서
                    <![CDATA[
                    AND SUBSTR(ORG_CLOSE_DATE,1,4) >= #{critYear}
                    ]]>
                    AND CRIT_YEAR = #{critYear}
                    -- WHERE ORG_CLOSE_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD')
                    START WITH
                    DEPT_ID = #{slsDeptId}
                    CONNECT BY
                    PRIOR DEPT_ID = HGRK_DEPT_ID
                    )
                </if>
                <if test='slsEmpId != null'>
                    AND A.SLS_EMP_ID = #{slsEmpId} -- 조회조건_영업대표
                </if>
                <if test='bsnsClsfCd != null and bsnsClsfCd != "" '>
                    AND A.BSNS_CLSF_CD = #{bsnsClsfCd} -- 조회조건_사업분류
                </if>
                <if test='prodDstCd != null and prodDstCd != "" '>
                    AND B.PROD_DST_CD = #{prodDstCd} -- ★조회조건_상품구분 -- ★상품실적현황인 경우
                </if>
                GROUP BY C.LAST_CUST_ID, C.PRJT_ID, C.PRJT_NM, A.BOPT_ID, A.BOPT_NM,
                A.SLS_DEPT_ID, A.SLS_EMP_ID,
                A.CNTR_DATE,  A.WCT_DCD_DATE, -- 계약일자, 수주확정일자
                A.BOPT_END_TYPE_CD,
                A.BSNS_CLSF_CD, A.WCT_PRBB_CD, A.BOPT_STAT_CD, S.COM_CD_NUM_VAL
                <if test='prodDstCd != null and prodDstCd != "" '>
                    ,B.PROD_DST_CD  -- ★상품실적현황인 경우
                </if>
            ) P
            WHERE P.LAST_CUST_ID = M.CUST_ID
            AND P.SLS_EMP_ID = H.EMP_ID
        )
        <if test='orderTypeCd == "CP" or ( orderTypeCd == null)'>
            ORDER BY LAST_CUST_NM, PRJT_NM, CNTR_DATE -- 정렬기준: 고객명+프로젝트명
        </if>
        <if test='orderTypeCd == "SD" '>
            ORDER BY CNTR_DATE, LAST_CUST_NM, PRJT_NM -- 정렬기준: 발생시기
        </if>
        <if test='orderTypeCd == "WP" '>
            ORDER BY COM_CD_NUM_VAL DESC, CNTR_DATE, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 수주가능성
        </if>
        <if test='orderTypeCd == "TA" '>
            ORDER BY SELL_OPPTY_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 기회금액(수주)
        </if>
        <if test='orderTypeCd == "FA" '>
            ORDER BY SELL_FCST_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 확률금액(수주)
        </if>
        <if test='orderTypeCd == "RA" '>
            ORDER BY SELL_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 실적금액(수주)
        </if>
        <if test='orderTypeCd == "IC" '>
            ORDER BY ISSUE_CNT DESC, LAST_CUST_NM, PRJT_NM
        </if>
        ) T
        ) S
        WHERE ROWNUMBER BETWEEN #{pageSize} * (#{pageNumber} - 1) + 1
        AND #{pageSize} * (#{pageNumber} - 1) + #{pageSize}

    </select>



    <!-- 매입/매출 예상/실적 리스트 조회 -->
    <select id="selectBuySellSalesReportList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.SalesReportVO">
        SELECT * FROM (
        SELECT COUNT(1) OVER() AS TOTAL_CNT, ROWNUM AS ROWNUMBER, T.* FROM (
        SELECT LAST_CUST_ID, LAST_CUST_NM, PRJT_ID, PRJT_NM, BOPT_ID,
            SLS_DEPT_ID, SLS_EMP_ID, SLS_EMP_NM,
            CNTR_DATE, FCST_YAM,
            BSNS_CLSF_CD,  BSNS_CLSF_CD_NM, -- 사업분류코드
            WCT_PRBB_CD,  WCT_PRBB_CD_NM, -- 수주확률코드
            BOPT_STAT_CD, BOPT_STAT_CD_NM, -- 사업기회상태코드
            <if test='prodDstCd != null and prodDstCd != "" '>
                PROD_DST_CD, PROD_DST_CD_NM,  -- 상품구분코드  -- ★상품실적현황인 경우
            </if>
            --GODS_CLSF_CD, IBIZ_COM_CD_NM('GODS_CLSF_CD',B.GODS_CLSF_CD) GODS_CLSF_NM,  -- 제품분류코드
            SELL_OPPTY_RSL_AMT, -- 매출금액_기회
            BUY_OPPTY_RSL_AMT, -- 매입금액_기회
            SELL_FCST_RSL_AMT,  -- 매출금액_확률적용 -- ★20190711 계약완료는 수주확률 적용하지 않음
            BUY_FCST_RSL_AMT, -- 매입금액_확률적용 -- ★20190711 계약완료는 수주확률 적용하지 않음
            SELL_RSL_AMT, -- 매출금액_실적
            BUY_RSL_AMT, -- 매입금액_실적
            OPPTY_SELL_RSL_AMT, -- 매출금액_기회전체
            OPPTY_BUY_RSL_AMT, -- 매입금액_기회전체
            ACML_SELL_RSL_AMT, -- 매출금액_누적실적
            ACML_BUY_RSL_AMT, -- 매입금액_누적실적
            ISSUE_CNT,  -- 사업이슈개수
            WCT_PRBB_VAL,
            SUM(SELL_OPPTY_RSL_AMT) OVER() AS TOTAL_SELL_OPPTY_RSL_AMT, -- 매출금액_기회 총액
            SUM(BUY_OPPTY_RSL_AMT) OVER() AS TOTAL_BUY_OPPTY_RSL_AMT, -- 매입금액_기회 총액
            SUM(SELL_FCST_RSL_AMT) OVER() AS TOTAL_SELL_FCST_RSL_AMT, -- 매출금액_확률적용 총액
            SUM(BUY_FCST_RSL_AMT) OVER() AS TOTAL_BUY_FCST_RSL_AMT, -- 매입금액_확률적용 총액
            SUM(SELL_RSL_AMT) OVER() AS TOTAL_SELL_RSL_AMT,  -- 매출금액_실적 총액
            SUM(BUY_RSL_AMT) OVER() AS TOTAL_BUY_RSL_AMT,  -- 매입금액_실적 총액
            SUM(OPPTY_SELL_RSL_AMT) OVER() AS TOTAL_OPPTY_SELL_RSL_AMT, -- 매출금액_기회전체 총액
            SUM(OPPTY_BUY_RSL_AMT) OVER() AS TOTAL_OPPTY_BUY_RSL_AMT, -- 매입금액_기회전체 총액
            SUM(ACML_SELL_RSL_AMT) OVER() AS TOTAL_ACML_SELL_RSL_AMT, -- 매출금액_누적실적 총액
            SUM(ACML_BUY_RSL_AMT) OVER() AS TOTAL_ACML_BUY_RSL_AMT -- 매입금액_누적실적 총액
        FROM
        (
            SELECT P.LAST_CUST_ID, M.CUST_NM LAST_CUST_NM, P.PRJT_ID, P.PRJT_NM, P.BOPT_ID,
            P.SLS_DEPT_ID, P.SLS_EMP_ID, H.EMP_NM SLS_EMP_NM,
            P.CNTR_DATE, P.FCST_YAM,
            P.BSNS_CLSF_CD, IBIZ_COM_CD_NM('BSNS_CLSF_CD',P.BSNS_CLSF_CD) BSNS_CLSF_CD_NM, -- 사업분류코드
            P.WCT_PRBB_CD, IBIZ_COM_CD_NM('WCT_PRBB_CD',P.WCT_PRBB_CD) WCT_PRBB_CD_NM, -- 수주확률코드
            P.BOPT_STAT_CD, IBIZ_COM_CD_NM('BOPT_STAT_CD',P.BOPT_STAT_CD) BOPT_STAT_CD_NM, -- 사업기회상태코드
            <if test='prodDstCd != null and prodDstCd != "" '>
                P.PROD_DST_CD, IBIZ_COM_CD_NM('PROD_DST_CD',P.PROD_DST_CD) PROD_DST_CD_NM,  -- 상품구분코드  -- ★상품실적현황인 경우
            </if>
            --GODS_CLSF_CD, IBIZ_COM_CD_NM('GODS_CLSF_CD',B.GODS_CLSF_CD) GODS_CLSF_NM,  -- 제품분류코드
            P.SELL_AMT AS SELL_OPPTY_RSL_AMT, -- 매출금액_기회
            P.BUY_AMT AS BUY_OPPTY_RSL_AMT, -- 매입금액_기회
            P.SELL_AMT*P.WCT_PRBB_VAL AS SELL_FCST_RSL_AMT, -- 매출금액_확률적용 -- ★20190711 계약완료는 수주확률 적용하지 않음
            P.BUY_AMT*P.WCT_PRBB_VAL AS BUY_FCST_RSL_AMT, -- 매입금액_확률적용 -- ★20190711 계약완료는 수주확률 적용하지 않음
            DECODE(P.BOPT_STAT_CD,'E',P.SELL_AMT,0) AS SELL_RSL_AMT, -- 매출금액_실적
            DECODE(P.BOPT_STAT_CD,'E',P.BUY_AMT,0) AS BUY_RSL_AMT, -- 매입금액_실적
            SUM(Q.SELL_AMT) AS OPPTY_SELL_RSL_AMT, -- 매출금액_기회전체
            SUM(Q.BUY_AMT) AS OPPTY_BUY_RSL_AMT, -- 매입금액_기회전체
            <![CDATA[
               SUM(CASE WHEN P.BOPT_STAT_CD='E' AND Q.FCST_YAM<=#{toDate} THEN Q.SELL_AMT ELSE 0 END) AS ACML_SELL_RSL_AMT, -- 매출금액_누적실적
               SUM(CASE WHEN P.BOPT_STAT_CD='E' AND Q.FCST_YAM<=#{toDate} THEN Q.BUY_AMT ELSE 0 END) AS ACML_BUY_RSL_AMT, -- 매입금액_누적실적

            ]]>
            (SELECT COUNT(BSNS_ISSUE_ID)
                FROM BPIP200T
                WHERE PRJT_ID = P.PRJT_ID
                AND ISSUE_DLNG_STAT_CD IN ('A','B','C','D') -- 이슈처리상태: A.등록, B.계획수립, C.처리중, D.결과검토
            ) ISSUE_CNT,  -- 사업이슈개수
            P.WCT_PRBB_VAL
            FROM CMST000T M, HMST300T H, BPIP020T Q,
            ( -- 대상건 추출
                SELECT C.LAST_CUST_ID, C.PRJT_ID, C.PRJT_NM, A.BOPT_ID, -- A.BOPT_NM,
                A.SLS_DEPT_ID, A.SLS_EMP_ID,
                A.CNTR_DATE, --A.WCT_DCD_DATE, -- 계약일자, 수주확정일자
                B.FCST_YAM,
                A.BSNS_CLSF_CD, A.WCT_PRBB_CD, A.BOPT_STAT_CD,
                CASE WHEN A.BOPT_STAT_CD = 'E' THEN 1 ELSE S.COM_CD_NUM_VAL END WCT_PRBB_VAL, -- ★20190711 계약완료는 수주확률 적용하지 않음
                <if test='prodDstCd != null and prodDstCd != "" '>
                    B.PROD_DST_CD, --B.GODS_CLSF_CD,	 -- ★상품실적현황인 경우
                </if>
                NVL(SUM(B.SELL_AMT),0) SELL_AMT, -- 매출금액
                NVL(SUM(B.BUY_AMT),0) BUY_AMT -- 매입금액
                FROM BPIP000T A, BPIP020T B, APRJ000T C, ACOM010T S
                WHERE A.BOPT_ID = B.BOPT_ID(+)
                <choose>
                    <when test='isUnsold != null and isUnsold != "" '>
                        AND (A.FCST_RFLC_YN = 'Y' AND A.BOPT_STAT_CD != 'E') -- 사업예상반영여부=Y, 사업기회상태!=계약완료 ★Unsold인 경우
                    </when>
                    <otherwise>
                        AND (A.FCST_RFLC_YN = 'Y' OR A.BOPT_STAT_CD = 'E') -- 사업예상반영여부=Y, 사업기회상태=계약완료
                    </otherwise>
                </choose>
                AND A.BOPT_STAT_CD != 'D1'
                AND A.BOPT_STAT_CD != 'F' -- 사업기회종료 제외
                AND (A.BOPT_STAT_CD = 'E' OR SUBSTR(A.CNTR_DATE,1,6) >= TO_CHAR(SYSDATE-30,'YYYYMM')) -- ★20190711 Sold이거나 Unsold(마감 고려 1개월 소급적용)
                AND A.PRJT_ID = C.PRJT_ID
                AND C.PRJT_STAT_CD NOT LIKE 'F%' --F1.사업이관, F2.사업폐기
                AND C.PRJT_STAT_CD NOT LIKE 'D%' --D1.일반삭제, D2.중복삭제
                AND S.COM_GRP_CD = (SELECT COM_GRP_CD FROM ACOM020T WHERE CLMN_NM = 'WCT_PRBB_CD') -- 수주확률코드
                AND A.WCT_PRBB_CD = S.COM_CD
                <if test='prjtTypeCd != null and prjtTypeCd != "" '>
                    AND C.PRJT_TYPE_CD = #{prjtTypeCd}
                </if>
                AND B.FCST_YAM BETWEEN #{fromDate} AND #{toDate} -- 조회조건_기간
                <if test='slsDeptId != null and slsDeptId != "" '>
                    AND A.SLS_DEPT_ID  in (
                    SELECT DEPT_ID FROM HMST110T
                    WHERE SELL_OCR_YN = 'Y' -- 매출발생부서
                    <![CDATA[
                    AND SUBSTR(ORG_CLOSE_DATE,1,4) >= #{critYear}
                    ]]>
                    AND CRIT_YEAR = #{critYear}
                    START WITH
                    DEPT_ID = #{slsDeptId}
                    CONNECT BY
                    PRIOR DEPT_ID = HGRK_DEPT_ID
                    )    -- 조회조건_영업부서
                </if>
                <if test='slsEmpId != null'>
                    AND A.SLS_EMP_ID = #{slsEmpId} -- 조회조건_영업대표
                </if>
                <if test='bsnsClsfCd != null and bsnsClsfCd != "" '>
                    AND A.BSNS_CLSF_CD = #{bsnsClsfCd} -- 조회조건_사업분류
                </if>
                <if test='brslDstCd == "B" '>
                    AND B.SELL_AMT != 0 -- 매출 예상/실적 리스트인 경우
                </if>
                <if test='brslDstCd == "C" '>
                    AND B.BUY_AMT != 0 -- 매입 예상/실적 리스트인 경우
                </if>
                <if test='prodDstCd != null and prodDstCd != "" '>
                    AND B.PROD_DST_CD = #{prodDstCd} -- ★조회조건_상품구분 -- ★상품실적현황인 경우
                </if>
                GROUP BY C.LAST_CUST_ID, C.PRJT_ID, C.PRJT_NM, A.BOPT_ID,
                A.SLS_DEPT_ID, A.SLS_EMP_ID,
                A.CNTR_DATE, --A.WCT_DCD_DATE, -- 계약일자, 수주확정일자
                B.FCST_YAM, -- 매출매입예상월
                A.BSNS_CLSF_CD, A.WCT_PRBB_CD, A.BOPT_STAT_CD,
                CASE WHEN A.BOPT_STAT_CD = 'E' THEN 1 ELSE S.COM_CD_NUM_VAL END --★20190711 WCT_PRBB_VAL
                <if test='prodDstCd != null and prodDstCd != "" '>
                    , B.PROD_DST_CD  -- ★상품실적현황인 경우
                </if>
            ) P
            WHERE P.LAST_CUST_ID = M.CUST_ID
            AND P.SLS_EMP_ID = H.EMP_ID
            AND P.BOPT_ID = Q.BOPT_ID
            <if test='prodDstCd != null and prodDstCd != "" '>
                AND P.PROD_DST_CD = Q.PROD_DST_CD  -- ★상품실적현황인 경우
            </if>
            GROUP BY LAST_CUST_ID, M.CUST_NM, P.PRJT_ID, P.PRJT_NM, P.BOPT_ID,P.BOPT_STAT_CD,
            P.SLS_DEPT_ID, P.SLS_EMP_ID, H.EMP_NM,
            P.CNTR_DATE, P.FCST_YAM,
            P.BSNS_CLSF_CD, P.WCT_PRBB_CD, P.WCT_PRBB_VAL, -- ★20190711
            <if test='prodDstCd != null and prodDstCd != "" '>
                P.PROD_DST_CD,  -- ★상품실적현황인 경우
            </if>
            P.SELL_AMT, P.BUY_AMT
        )
        <if test='orderTypeCd == "CP" or ( orderTypeCd == null)'>
            ORDER BY LAST_CUST_NM, PRJT_NM, CNTR_DATE  -- 정렬기준: 고객명+프로젝트명
        </if>
        <if test='orderTypeCd == "SD" '>
            ORDER BY FCST_YAM, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 발생시기
        </if>
        <if test='orderTypeCd == "WP" '>
            ORDER BY WCT_PRBB_VAL DESC, FCST_YAM, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 수주가능성
        </if>
        <if test='orderTypeCd == "TA" '>
            <if test='brslDstCd == "B" '>
                ORDER BY SELL_OPPTY_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 기회금액(매출)
            </if>
            <if test='brslDstCd == "C" '>
                ORDER BY BUY_OPPTY_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 기회금액(매입)
            </if>
        </if>
        <if test='orderTypeCd == "FA" '>
            <if test='brslDstCd == "B" '>
                ORDER BY SELL_FCST_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 확률금액(매출)
            </if>
            <if test='brslDstCd == "C" '>
                ORDER BY BUY_FCST_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM, FCST_YAM  -- 정렬기준: 확률금액(매입)
            </if>
        </if>
        <if test='orderTypeCd == "RA" '>
            <if test='brslDstCd == "B" '>
                ORDER BY SELL_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 실적금액(매출)
            </if>
            <if test='brslDstCd == "C" '>
                ORDER BY BUY_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 실적금액(매입)
            </if>
        </if>
        <if test='orderTypeCd == "IC" '>
            ORDER BY ISSUE_CNT DESC, LAST_CUST_NM, PRJT_NM
        </if>
        ) T
        ) S
        WHERE ROWNUMBER BETWEEN #{pageSize} * (#{pageNumber} - 1) + 1
        AND #{pageSize} * (#{pageNumber} - 1) + #{pageSize}

    </select>

    <!-- 월별실적비교분석 -->
    <select id="selectMonthlyCompareStatsList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.BusinessResultVO">
        SELECT BC.BRSL_DST_CD, BC.BRSL_DST_CD_NM, --사업실적구분
               JAN_AMT, FEB_AMT, MAR_AMT, APR_AMT, MAY_AMT, JUN_AMT,
               JUL_AMT, AUG_AMT, SEP_AMT, OCT_AMT, NOV_AMT, DEC_AMT
        FROM
              ( SELECT CC.BRSL_DST_CD, A.BRSL_DTL_DST_CD, --CC.BRSL_DTL_DST_CD_NM, CC.BRSL_DST_CD,
                       SUM(JAN_AMT) JAN_AMT, SUM(FEB_AMT) FEB_AMT, SUM(MAR_AMT) MAR_AMT, SUM(APR_AMT) APR_AMT, SUM(MAY_AMT) MAY_AMT, SUM(JUN_AMT) JUN_AMT,
                       SUM(JUL_AMT) JUL_AMT, SUM(AUG_AMT) AUG_AMT ,SUM(SEP_AMT) SEP_AMT, SUM(OCT_AMT) OCT_AMT, SUM(NOV_AMT) NOV_AMT, SUM(DEC_AMT) DEC_AMT
                  FROM BRST100V A,   --연도별부서실적
                     ( SELECT C10.COM_CD BRSL_DTL_DST_CD, C10.COM_CD_NM BRSL_DTL_DST_CD_NM, C10.HGRK_COM_CD AS BRSL_DST_CD
                         FROM ACOM020T C20, ACOM010T C10
                        WHERE C20.CLMN_NM = 'BRSL_DTL_DST_CD' --사업실적상세구분코드
                          AND C20.COM_GRP_CD = C10.COM_GRP_CD
                          AND C10.USE_YN = 'Y'
                     ) CC
        WHERE 1 = 1
        <if test='critYear != null and critYear != "" '>
            AND CRIT_YEAR =  #{critYear}  -- ★조회조건 기준연도
        </if>
            AND BPLN_DST_CD =
                      ( SELECT C10.COM_CD_CHAR_VAL AS BPLN_DST_CD
                          FROM ACOM020T C20, ACOM010T C10
                         WHERE C20.CLMN_NM = 'BPLN_CLSF_CD'
                           AND C10.COM_CD = #{bplnClsfCd} --★조회조건: 사업계획분류코드
                           AND C20.COM_GRP_CD = C10.COM_GRP_CD )
                AND A.BRSL_DTL_DST_CD LIKE CONCAT('%', #{bplnClsfCd}) --★조회조건: 사업계획분류코드
                AND A.BRSL_DTL_DST_CD = CC.BRSL_DTL_DST_CD
        <if test='bsnsClsfCd != null and bsnsClsfCd != "" '>
            AND BSNS_CLSF_CD = #{bsnsClsfCd} --★조회조건: 사업분류
        </if>
        <if test='prodDstCd != null and prodDstCd != "" '>
            AND PROD_DST_CD = #{prodDstCd} --★조회조건: 상품구분
        </if>
        <if test='godsClsfCd != null and godsClsfCd != "" '>
            AND GODS_CLSF_CD = #{godsClsfCd} --★조회조건: 제품분류
        </if>
        AND DEPT_ID IN (SELECT DEPT_ID FROM HMST110T  --★조회조건: 하위부서 포함
                            WHERE SELL_OCR_YN = 'Y' -- 매출발생부서
                            START WITH DEPT_ID = #{deptId} AND CRIT_YEAR = #{critYear} --★조회조건: 영업부서
                            CONNECT BY PRIOR DEPT_ID = HGRK_DEPT_ID AND PRIOR CRIT_YEAR = CRIT_YEAR)
         GROUP BY CC.BRSL_DST_CD, A.BRSL_DTL_DST_CD --, CC.BRSL_DTL_DST_CD_NM, CC.BRSL_DST_CD
         ORDER BY CC.BRSL_DST_CD, A.BRSL_DTL_DST_CD
       ) V,
       ( SELECT SORT_SEQC AS RSL_DST_SEQC, --정렬순서를 가져오기 위해 FUNCTION을 사용하지 않고 직접 Query
                C10.COM_CD BRSL_DST_CD, C10.COM_CD_NM BRSL_DST_CD_NM
           FROM ACOM020T C20, ACOM010T C10
          WHERE C20.CLMN_NM = 'BRSL_DST_CD' --사업실적구분코드
            AND C20.COM_GRP_CD = C10.COM_GRP_CD
            AND C10.USE_YN = 'Y'
       ) BC
        WHERE BC.BRSL_DST_CD = V.BRSL_DST_CD(+)
        ORDER BY BC.RSL_DST_SEQC

    </select>

    <!-- 기준연도별 사업분류리스트 조회-->
    <select id="selectBsnsClsfList"
            parameterType="com.ibiz.api.model.YearBizTypeDimVO"
            resultType="com.ibiz.api.model.YearBizTypeDimVO">
        SELECT CRIT_YEAR, BSNS_CLSF_CD, BSNS_CLSF_CD_NM AS BSNS_CLSF_CD_NM
        FROM BRST004T
        WHERE CRIT_YEAR = #{critYear}
        ORDER BY SORT_SEQC
    </select>


    <!-- 조건별 주간업무보고 조회 -->
    <select id="selectWeeklyActivityList"
            parameterType="com.ibiz.api.model.WeekJobReportVO"
            resultType="com.ibiz.api.model.WeekJobReportVO">

        SELECT
            ROWNUMBER,BSNS_CLSF_CD,BSNS_CLSF_CD_NM,
            LAST_CUST_ID ,LAST_CUST_NM, PRJT_ID,BOPT_ID,BOPT_NM,
            ORDE_CUST_ID, ORDE_CUST_NM,CNTR_DATE, CNTR_AMT,CNTR_TRSF_START_YAM,CNTR_TRSF_END_YAM,SUM_SELL_AMT,
            WCT_PRBB_CD ,WCT_PRBB_CD_NM, SLS_DEPT_ID, SLS_DEPT_NM, SLS_EMP_ID, SLS_EMP_NM,
            BOPT_STAT_CD, BOPT_STAT_CD_NM,  TOTAL_CNT
        FROM
        ( SELECT ROWNUM AS ROWNUMBER,BSNS_CLSF_CD,BSNS_CLSF_CD_NM,
                LAST_CUST_ID ,LAST_CUST_NM, PRJT_ID,BOPT_ID,BOPT_NM,
                ORDE_CUST_ID, ORDE_CUST_NM,CNTR_DATE, CNTR_AMT, CNTR_TRSF_START_YAM,CNTR_TRSF_END_YAM,SUM_SELL_AMT,
                WCT_PRBB_CD ,WCT_PRBB_CD_NM, SLS_DEPT_ID, SLS_DEPT_NM, SLS_EMP_ID, SLS_EMP_NM,
                BOPT_STAT_CD, BOPT_STAT_CD_NM,  TOTAL_CNT
            FROM (
                    SELECT T1.BSNS_CLSF_CD ,IBIZ_COM_CD_NM('BSNS_CLSF_CD',T1.BSNS_CLSF_CD) BSNS_CLSF_CD_NM,
                        T2.LAST_CUST_ID ,T2.LAST_CUST_NM,T1.PRJT_ID,T1.BOPT_ID,T1.BOPT_NM,
                        T1.ORDE_CUST_ID,IBIZ_CUST_NM(T1.ORDE_CUST_ID) AS ORDE_CUST_NM,
                        T1.CNTR_DATE, T1.CNTR_AMT,T1.CNTR_TRSF_START_YAM,T1.CNTR_TRSF_END_YAM,
                        ( SELECT SUM(SELL_AMT)
                            FROM  BPIP020T
                            WHERE BOPT_ID = T1.BOPT_ID
                        ) SUM_SELL_AMT,
                        T1.WCT_PRBB_CD ,IBIZ_COM_CD_NM('WCT_PRBB_CD',T1.WCT_PRBB_CD) WCT_PRBB_CD_NM,
                        T1.SLS_DEPT_ID,IBIZ_DEPT_NM(T1.SLS_DEPT_ID) AS SLS_DEPT_NM,
                        T1.SLS_EMP_ID,IBIZ_EMP_NM(T1.SLS_EMP_ID) AS SLS_EMP_NM,
                        T1.BOPT_STAT_CD,IBIZ_COM_CD_NM('BOPT_STAT_CD',T1.BOPT_STAT_CD) BOPT_STAT_CD_NM, COUNT(1) OVER() AS TOTAL_CNT
                    FROM  BPIP000T T1
                    JOIN
                        ( SELECT PRJT_ID,PRJT_NM,LAST_CUST_ID,PRJT_STAT_CD,IBIZ_CUST_NM(LAST_CUST_ID) AS LAST_CUST_NM
                            FROM APRJ000T
                            WHERE PRJT_STAT_CD NOT LIKE 'F%'
                            AND PRJT_STAT_CD NOT LIKE 'D%'
                        ) T2
                    ON T1.PRJT_ID = T2.PRJT_ID
                    WHERE 1=1
                    AND T1.BOPT_STAT_CD != 'D1'
                    AND T1.DTIM_RPRT_DISP_YN = 'Y'
                    AND T1.SLS_DEPT_ID IN (SELECT DEPT_ID FROM HMST100T
                                            START WITH
                                            <if test="slsDeptId != null and slsDeptId != ''">
                                                DEPT_ID = #{slsDeptId}
                                            </if>
                                            <if test="slsDeptId == null or slsDeptId == ''">
                                                HGRK_DEPT_ID IS NULL
                                            </if>
                                            CONNECT BY PRIOR DEPT_ID=HGRK_DEPT_ID
                                        )
                <if test="lastCustNm != null and lastCustNm != '' ">
                    AND UPPER(T2.LAST_CUST_NM) LIKE '%'||UPPER(#{lastCustNm})||'%'
                </if>
                <if test="lastCustId != null and lastCustId != '' ">
                    AND UPPER(T2.LAST_CUST_ID) = UPPER(#{lastCustId})
                </if>
                <if test="prjtNm != null and prjtNm != '' ">
                    AND UPPER(T2.PRJT_NM) LIKE '%'||UPPER(#{prjtNm})||'%'
                </if>
                <if test="prjtId != null and prjtId != '' ">
                    AND UPPER(T2.PRJT_ID) = UPPER(#{prjtId})
                </if>
                <if test="slsEmpId != null and slsEmpId != '' ">
                    AND UPPER(T1.SLS_EMP_ID) LIKE '%'||UPPER(#{slsEmpId})||'%'
                </if>
                AND EXISTS (SELECT 1 FROM BPIP250T WHERE BOPT_ID = T1.BOPT_ID
                <if test="regActStartDate != null and regActStartDate != ''">
                    <![CDATA[
                                                AND #{regActStartDate} <= TO_CHAR(REG_DT, 'YYYYMMDD')
                                        ]]>
                </if>
                <if test="regActEndDate != null and regActEndDate != ''">
                    <![CDATA[
                                                AND #{regActEndDate} >= TO_CHAR(REG_DT, 'YYYYMMDD')
                                            ]]>
                </if>
                )
        <if test="boptStatCd != null and boptStatCd != '' ">
            AND T1.BOPT_STAT_CD = #{boptStatCd}
        </if>
        <if test="minWctPrbbCd != null and minWctPrbbCd != ''">
            <![CDATA[
                                 AND #{minWctPrbbCd} <= TO_NUMBER(T1.WCT_PRBB_CD)
                                ]]>
        </if>
        <if test="maxWctPrbbCd != null and maxWctPrbbCd != ''">
            <![CDATA[
                                AND #{maxWctPrbbCd} >= TO_NUMBER(T1.WCT_PRBB_CD)
                                ]]>
        </if>
        <if test='cntrAmt != null and cntrAmt != "" and cntrAmt != "0" '>
            AND NVL((
            SELECT  SUM(SELL_AMT)
            FROM BPIP020T
            WHERE  BOPT_ID = T1.BOPT_ID
            <choose>
                <when test="compareCd == 'above'">
                    <![CDATA[
                                         ),0) >= #{cntrAmt} * 100000000
                                        ]]>
                </when>
                <when test="compareCd == 'below'">
                    <![CDATA[
                                         ),0) <= #{cntrAmt} * 100000000
                                        ]]>
                </when>
                <when test="compareCd == 'over'">
                    <![CDATA[
                                         ),0) > #{cntrAmt} * 100000000
                                        ]]>
                </when>
                <when test="compareCd == 'under'">
                    <![CDATA[
                                         ),0) < #{cntrAmt} * 100000000
                                        ]]>
                </when>
            </choose>
        </if>
        ORDER BY T1.BSNS_CLSF_CD, SUM_SELL_AMT DESC, T1.CNTR_DATE
        )TF
        ) WT
        WHERE
        ROWNUMBER BETWEEN #{pageSize} * (#{pageNumber} - 1) + 1
        AND #{pageSize} * (#{pageNumber} - 1) + #{pageSize}

    </select>

    <!-- 조건별 주간업무보고 조회(서브) -->
    <select id="selectWeeklyActivitySubList"
            parameterType="com.ibiz.api.model.WeekJobReportVO"
            resultType="com.ibiz.api.model.WeekJobReportVO">
        SELECT T250.BOPT_ID,  T000.SPCL_CONT, T250.PRMRY_ACT_CONT,  T250.ACT_PLAN_CONT
        FROM BPIP250T T250
        LEFT OUTER JOIN BPIP000T T000
        ON T000.BOPT_ID = T250.BOPT_ID
        WHERE 1 = 1
        AND T250.BOPT_ID = #{boptId}

        <if test="regActStartDate != null and regActStartDate != ''">
            <![CDATA[
                AND TO_CHAR(T250.REG_DT, 'YYYYMMDD') >= #{regActStartDate}
            ]]>
        </if>
        <if test="regActEndDate != null and regActEndDate != ''">
            <![CDATA[
                AND TO_CHAR(T250.REG_DT, 'YYYYMMDD') <= #{regActEndDate}
            ]]>
        </if>
        ORDER BY T250.REG_DT DESC, T250.CHG_DT DESC
    </select>


    <!-- 월간보고서리스트 조회-->
    <select id="selectMonthlyWorkList"
            parameterType="com.ibiz.api.model.MonthlyWorkVO"
            resultType="com.ibiz.api.model.MonthlyWorkVO">

        SELECT CRIT_YAM,SLS_DEPT_ID, SLS_DEPT_NM, REG_EMP_ID, REG_EMP_NM,REG_DT,
        CHG_EMP_ID, CHG_EMP_NM, CHG_DT, DEPT_SORT_ROWNUM,TOTAL_CNT,  ROWNUMBER
        FROM
        (
        SELECT  CRIT_YAM,SLS_DEPT_ID, SLS_DEPT_NM, REG_EMP_ID, REG_EMP_NM,REG_DT,
        CHG_EMP_ID, CHG_EMP_NM, CHG_DT, DEPT_SORT_ROWNUM,TOTAL_CNT,
        ROWNUM AS ROWNUMBER
        FROM (
        SELECT
        BPIP.CRIT_YAM, BPIP.SLS_DEPT_ID,HMST.DEPT_NM AS SLS_DEPT_NM,
        BPIP.REG_EMP_ID, IBIZ_EMP_NM(BPIP.REG_EMP_ID) AS REG_EMP_NM,
        BPIP.REG_DT, BPIP.CHG_EMP_ID,IBIZ_EMP_NM(BPIP.CHG_EMP_ID) AS CHG_EMP_NM,
        BPIP.CHG_DT, HMST.DEPT_SORT_ROWNUM,
        COUNT(1) OVER() AS TOTAL_CNT
        FROM BPIP260T BPIP
        JOIN
        (
        SELECT DEPT_ID, DEPT_NM, HGRK_DEPT_ID,  ROWNUM AS DEPT_SORT_ROWNUM
        FROM HMST100T
        START WITH
        HGRK_DEPT_ID IS NULL
        CONNECT BY
        PRIOR DEPT_ID = HGRK_DEPT_ID
        ORDER SIBLINGS BY
        DEPT_SORT_SEQC ASC
        ) HMST
        ON BPIP.SLS_DEPT_ID = HMST.DEPT_ID
        WHERE
        1 = 1
        <if test="slsDeptId != null and slsDeptId != ''">
            AND   (
            BPIP.SLS_DEPT_ID IN (
            SELECT DEPT_ID
            FROM HMST100T
            START WITH
            HGRK_DEPT_ID = #{slsDeptId}
            CONNECT BY
            PRIOR DEPT_ID = HGRK_DEPT_ID
            )
            OR    BPIP.SLS_DEPT_ID =  #{slsDeptId}
            )
        </if>
        <if test="critYear != null and critYear != ''">
            AND   SUBSTR(BPIP.CRIT_YAM,0,4) = #{critYear}
        </if>
        ORDER BY CRIT_YAM DESC, DEPT_SORT_ROWNUM ASC
        ) TF
        )
        WHERE
        ROWNUMBER BETWEEN #{pageSize} * (#{pageNumber} - 1) + 1
        AND #{pageSize} * (#{pageNumber} - 1) + #{pageSize}

    </select>

    <!-- 월간보고서 기준연도 리스트 조회-->
    <select id="selectCritYearList"
            resultType="com.ibiz.api.model.MonthlyWorkVO">
        <![CDATA[
			SELECT ( SELECT
			            MIN(SUBSTR(CRIT_YAM,0,4) )
			        FROM BPIP260T
            ) +LEVEL-1 AS CRIT_YEAR
            FROM DUAL
            CONNECT BY LEVEL <= (
			        SELECT
			            MAX(SUBSTR(CRIT_YAM,0,4) ) - MIN(SUBSTR(CRIT_YAM,0,4) )
			        FROM
			            BPIP260T
			    ) + 1
			 ]]>
    </select>

    <!-- 월간보고서상세내역 조회-->
    <select id="selectMonthlyWork"
            parameterType="com.ibiz.api.model.MonthlyWorkVO"
            resultType="com.ibiz.api.model.MonthlyWorkVO">

        SELECT
        CRIT_YAM, SLS_DEPT_ID, IBIZ_DEPT_NM(BPIP260T.SLS_DEPT_ID) AS SLS_DEPT_NM,
        BDCT_CONT, REG_EMP_ID, IBIZ_EMP_NM(BPIP260T.REG_EMP_ID) AS REG_EMP_NM,
        REG_DT, CHG_EMP_ID, IBIZ_EMP_NM(BPIP260T.CHG_EMP_ID) AS CHG_EMP_NM, CHG_DT
        FROM
        BPIP260T
        WHERE
        SLS_DEPT_ID = #{slsDeptId}
        AND   CRIT_YAM = #{critYam}

    </select>

    <!-- 저장가능여부 조회-->
    <select id="selectIsAbleToSave"
            parameterType="com.ibiz.api.model.MonthlyWorkVO"
            resultType="java.lang.Integer">

        SELECT NVL(COUNT(1),0)
        FROM
        BPIP260T
        WHERE
        CRIT_YAM = #{critYam}
        AND   SLS_DEPT_ID = #{slsDeptId}

    </select>


    <!-- 사업프로젝트 기본 리스트 조회 -->
    <select id="selectBizPrjtInfoList"
            parameterType="com.ibiz.api.model.BizProjectInfoVO"
            resultType="com.ibiz.api.model.BizProjectInfoVO">
        SELECT *
        FROM (
                SELECT COUNT(1) OVER() AS TOTAL_CNT, ROWNUM AS ROWNUMBER, Z.*
                FROM (
                        SELECT DISTINCT A.PRJT_ID, IBIZ_PRJT_NM(A.PRJT_ID) AS PRJT_NM, A.SEQ,
                            LAST_CUST_ID, IBIZ_CUST_NM(LAST_CUST_ID) AS LAST_CUST_NM,
                            PRJT_TYPE_CD, IBIZ_COM_CD_NM('PRJT_TYPE_CD', PRJT_TYPE_CD) AS PRJT_TYPE_CD_NM,
                            B.BEXC_START_DATE, B.BEXC_END_DATE, SLS_DEPT_ID, IBIZ_DEPT_NM(SLS_DEPT_ID) AS SLS_DEPT_NM,
                            SLS_EMP_ID, IBIZ_EMP_NM(SLS_EMP_ID) AS SLS_EMP_NM,
                            PRJT_STAT_CD, IBIZ_COM_CD_NM('PRJT_STAT_CD', PRJT_STAT_CD) AS PRJT_STAT_CD_NM,
                            BSNS_DEPT_ID, IBIZ_DEPT_NM(BSNS_DEPT_ID) AS BSNS_DEPT_NM,
                            BSNS_EMP_ID, IBIZ_EMP_NM(BSNS_EMP_ID) AS BSNS_EMP_NM,
                            A.BSNS_PRGS_STAT_CD, IBIZ_COM_CD_NM('BSNS_PRGS_STAT_CD', A.BSNS_PRGS_STAT_CD) AS BSNS_PRGS_STAT_CD_NM,
                            REG_EMP_ID, IBIZ_EMP_NM(REG_EMP_ID) AS REG_EMP_NM, REG_DT,
                            CHG_EMP_ID, IBIZ_EMP_NM(CHG_EMP_ID) AS CHG_EMP_NM, CHG_DT, E.SORT_SEQC
                        FROM BPRJ000T A
                        LEFT JOIN (SELECT PRJT_ID, LAST_CUST_ID, PRJT_TYPE_CD, BEXC_START_DATE, BEXC_END_DATE, SLS_DEPT_ID, SLS_EMP_ID, PRJT_STAT_CD FROM APRJ000T) B ON A.PRJT_ID = B.PRJT_ID
                        LEFT JOIN (SELECT PRJT_ID, SEQ, BSNS_RPRT_START_DATE, BSNS_RPRT_END_DATE, RPRT_YN, BSNS_PRGS_STAT_CD FROM BPRJ010T) D ON A.PRJT_ID = D.PRJT_ID AND A.SEQ = D.SEQ
                        LEFT JOIN (SELECT COM_CD, COM_CD_NM, SORT_SEQC FROM ACOM010T WHERE COM_GRP_CD = (SELECT COM_GRP_CD FROM ACOM020T WHERE CLMN_NM = 'BSNS_PRGS_STAT_CD' )) E ON A.BSNS_PRGS_STAT_CD = E.COM_CD
                        WHERE 1= 1
                            <if test="prjtId != null and prjtId != ''">
                                 AND UPPER(A.PRJT_ID) = UPPER(#{prjtId}) --★ 검색조건: 프로젝트ID
                            </if>
                            <if test="prjtNm != null and prjtNm != ''">
                                 AND UPPER(IBIZ_PRJT_NM(A.PRJT_ID)) LIKE '%'||UPPER(#{prjtNm})||'%' --★ 검색조건: 프로젝트명
                            </if>
                            <if test="lastCustId != null and lastCustId != ''">
                                 AND UPPER(LAST_CUST_ID) = UPPER(#{lastCustId}) --★ 검색조건:최종고객ID
                            </if>
                            <if test="lastCustNm != null and lastCustNm != ''">
                                 AND UPPER(IBIZ_CUST_NM(LAST_CUST_ID)) LIKE '%'||UPPER(#{lastCustNm})||'%' --★ 검색조건:최종고객명
                            </if>
                            <if test="bsnsDeptId != null and bsnsDeptId != ''">
                                 AND   ( BSNS_DEPT_ID IN (
                                                        SELECT DEPT_ID FROM HMST100T
                                                        START WITH
                                                        HGRK_DEPT_ID = #{bsnsDeptId}
                                                        CONNECT BY
                                                        PRIOR DEPT_ID = HGRK_DEPT_ID
                                                    )
                                        OR BSNS_DEPT_ID =  #{bsnsDeptId}
                                    ) --★ 검색조건: 사업부서ID
                            </if>
                            <if test="bsnsEmpId != null and bsnsEmpId != ''">
                                AND BSNS_EMP_ID = #{bsnsEmpId} --★ 검색조건: 사업사원ID
                            </if>
                            <if test="slsEmpId != null and slsEmpId != ''">
                                 AND SLS_EMP_ID = #{slsEmpId} --★ 검색조건: 영업사원ID
                            </if>
                            <if test="rprtYn != null and rprtYn != ''">
                                 AND RPRT_YN = #{rprtYn} --★ 검색조건: 보고유무
                            </if>
                            <if test="prjtTypeCd != null and prjtTypeCd != ''">
                                 AND PRJT_TYPE_CD = #{prjtTypeCd} --★ 프로젝트유형코드
                            </if>
                            <if test="bsnsPrgsStatCd != null and bsnsPrgsStatCd != ''">
                                 AND A.BSNS_PRGS_STAT_CD = #{bsnsPrgsStatCd} --★ 사업진행상태코드
                            </if>
                            <if test="startDate != null and startDate != ''">
                                <![CDATA[
                                         AND ( BSNS_RPRT_START_DATE >= #{startDate} OR BSNS_RPRT_END_DATE >= #{startDate} OR (D.BSNS_PRGS_STAT_CD = 'H' AND RPRT_YN = 'Y') ) --★ 보고기간
                                    ]]>
                            </if>
                            <if test="endDate != null and endDate != ''">
                                <![CDATA[
                                         AND ( BSNS_RPRT_START_DATE <= #{endDate} OR BSNS_RPRT_END_DATE <= #{endDate} OR (D.BSNS_PRGS_STAT_CD = 'H' AND RPRT_YN = 'Y') ) --★ 보고기간
                                    ]]>
                            </if>
                        <choose>
                            <when test='sortCrit == "custNm" '>
                                ORDER BY IBIZ_CUST_NM(LAST_CUST_ID) ASC, IBIZ_PRJT_NM(A.PRJT_ID) ASC, E.SORT_SEQC ASC, REG_DT DESC --★ 정렬기준: 고객명
                            </when>
                            <when test='sortCrit == "prjtNm" '>
                                ORDER BY IBIZ_PRJT_NM(A.PRJT_ID) ASC, IBIZ_CUST_NM(LAST_CUST_ID) ASC, E.SORT_SEQC ASC, REG_DT DESC --★ 정렬기준: 프로젝트명
                            </when>
                            <when test='sortCrit == "bsnsPrgsStatCd" '>
                                ORDER BY E.SORT_SEQC ASC, IBIZ_PRJT_NM(A.PRJT_ID) ASC, IBIZ_CUST_NM(LAST_CUST_ID) ASC, REG_DT DESC --★ 정렬기준: 사업진행상태
                            </when>
                            <otherwise>
                                ORDER BY REG_DT DESC, IBIZ_PRJT_NM(A.PRJT_ID), IBIZ_CUST_NM(LAST_CUST_ID) ASC, E.SORT_SEQC ASC--★ 정렬기준: 등록일
                            </otherwise>
                        </choose>

                    ) Z
                )
        WHERE
            ROWNUMBER BETWEEN #{pageSize} * (#{pageNumber} - 1) + 1
            AND #{pageSize} * (#{pageNumber} - 1) + #{pageSize}
    </select>


    <!-- 사업프로젝트 보고내역 리스트 조회 -->
    <select id="selectBizPrjtRprtBkdnList"
            parameterType="com.ibiz.api.model.BizProjectInfoVO"
            resultType="com.ibiz.api.model.BizProjectReportVO">
        SELECT PRJT_ID, SEQ, BSNS_RPRT_START_DATE, BSNS_RPRT_END_DATE, RPRT_YN, RPRT_CONT,
            BSNS_PRGS_STAT_CD, IBIZ_COM_CD_NM('BSNS_PRGS_STAT_CD', BSNS_PRGS_STAT_CD) AS BSNS_PRGS_STAT_CD_NM,
            CHG_EMP_ID, IBIZ_EMP_NM(CHG_EMP_ID) AS CHG_EMP_NM, CHG_DT
        FROM BPRJ010T
        WHERE 1= 1
        <if test="rprtYn != null and rprtYn != ''">
            AND RPRT_YN = #{rprtYn}
        </if>
        <if test="startDate != null and startDate != ''">
            <![CDATA[
                    AND ( BSNS_RPRT_START_DATE >= #{startDate} OR BSNS_RPRT_END_DATE >= #{startDate}  OR (BSNS_PRGS_STAT_CD = 'H' AND RPRT_YN = 'Y') )
                ]]>
        </if>
        <if test="endDate != null and endDate != ''">
            <![CDATA[
                    AND ( BSNS_RPRT_START_DATE <= #{endDate} OR BSNS_RPRT_END_DATE <= #{endDate}  OR (BSNS_PRGS_STAT_CD = 'H' AND RPRT_YN = 'Y') )
                ]]>
        </if>
            AND UPPER(PRJT_ID) = UPPER(#{prjtId})
            AND SEQ = #{seq}
        ORDER BY BSNS_RPRT_START_DATE
    </select>

    <!-- 사업프로젝트 기본 상세 조회 -->
    <select id="selectBizPrjtInfo"
            parameterType="com.ibiz.api.model.BizProjectInfoVO"
            resultType="com.ibiz.api.model.BizProjectInfoVO">
        SELECT DISTINCT PRJT_ID, IBIZ_PRJT_NM(PRJT_ID) AS PRJT_NM, SEQ,
            BSNS_DEPT_ID, IBIZ_DEPT_NM(BSNS_DEPT_ID) AS BSNS_DEPT_NM,
            BSNS_EMP_ID, IBIZ_EMP_NM(BSNS_EMP_ID) AS BSNS_EMP_NM,
            BEXC_START_DATE, BEXC_END_DATE,
            BSNS_PRGS_STAT_CD, IBIZ_COM_CD_NM('BSNS_PRGS_STAT_CD', BSNS_PRGS_STAT_CD) AS BSNS_PRGS_STAT_CD_NM,
            REG_EMP_ID, IBIZ_EMP_NM(REG_EMP_ID) AS REG_EMP_NM, REG_DT,
            CHG_EMP_ID, IBIZ_EMP_NM(CHG_EMP_ID) AS CHG_EMP_NM, CHG_DT
        FROM BPRJ000T
        WHERE 1= 1
        AND UPPER(PRJT_ID) = UPPER(#{prjtId})
        AND SEQ = #{seq}
    </select>


    <!-- 사업프로젝트 max seq -->
    <select id="selectBizPrjtSeq"
            parameterType="com.ibiz.api.model.BizProjectInfoVO"
            resultType="com.ibiz.api.model.BizProjectInfoVO">
        SELECT NVL(MAX(SEQ),0) AS SEQ
        FROM BPRJ000T
        WHERE 1 = 1
        AND UPPER(PRJT_ID) = UPPER(#{prjtId})
    </select>


    <!-- ERP 실적 매출매입 조회 -->
    <select id="selectSalesRealReportDetailList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.SalesReportVO">


            SELECT * FROM (
            SELECT COUNT(1) OVER() AS TOTAL_CNT, ROWNUM AS ROWNUMBER, T.* FROM (
            SELECT *
            FROM
                (
                SELECT
                    A.CRIT_YAM as SELL_CRIT_YAM
                    ,A.BLTO_DEPT_ID AS SLS_DEPT_ID
                    ,DEPT_NM
                    ,A.EMP_ID
                    ,A.EMP_NM
                    ,A.PRJT_ID
                    ,A.PRJT_NM
                    ,A.FCST_PAL_ID
                    ,A.WCT_ID
                    ,A.BSNS_CLSF_CD
                    ,C.HGRK_COM_CD AS PROD_DST_CD
                    ,IBIZ_COM_CD_NM('PROD_DST_CD',C.HGRK_COM_CD) PROD_DST_CD_NM
                    ,SUBSTR(B.P_TYPE,1,2) AS PROD_TYPE_CD
                    ,SUBSTR(B.P_TYPE,2,2) AS GODS_CLSF_CD
                    ,PRJT.LAST_CUST_ID,CUST.CUST_NM AS LAST_CUST_NM
                    ,PRJT_TYPE_CD
                    ,ROUND(DECODE(B.RATE,NULL,A.SELL_AMT, A.SELL_AMT*B.RATE),0) AS SELL_RSL_AMT
                    ,ROUND(DECODE(B.BUY_RATE,NULL,A.BUY_AMT, A.BUY_AMT*B.BUY_RATE),0) AS BUY_RSL_AMT
                FROM (
                        SELECT
                            A.PRJT_ID,PRJT_NM,A.EMP_ID,A.EMP_NM,A.CRIT_YAM,FCST_PAL_ID,BLTO_DEPT_ID,BSNS_CLSF_CD,SUM(SELL_AMT)AS SELL_AMT,SUM(BUY_AMT) AS BUY_AMT,DEPT_NM, WCT_ID
                        FROM
                        (
                            SELECT
                                a.CRIT_YEAR||A.CRIT_MONTH AS CRIT_YAM ,A.PRJT_ID,PRJT_NM,F.EMP_ID,F.EMP_NM,FCST_PAL_ID,F.DEPT_ID AS BLTO_DEPT_ID,F.DEPT_NM,C.BSNS_CLSF_CD
                                ,CASE WHEN E.MAAC_PROFIT = 'PROF0001' THEN  SUM(NVL(RSL_AMT,0)) END AS SELL_AMT
                                ,CASE WHEN E.MAAC_PROFIT IN ('PROF0002','PROF0003','PROF0004','PROF0005') THEN  SUM(NVL(RSL_AMT,0)) END AS BUY_AMT
                                ,B.WCT_ID
                            FROM SSIF530T A
                            LEFT JOIN (
                                        SELECT DISTINCT CRIT_YEAR,CRIT_MONTH,PRJT_ID,PRJT_NM,EMP_ID,EMP_NM,DEPT_ID,DEPT_NM FROM GMST500T
                            )F
                            ON A.CRIT_YEAR = F.CRIT_YEAR AND A.CRIT_MONTH = F.CRIT_MONTH AND A.PRJT_ID = F.PRJT_ID
                            LEFT JOIN WMST100T B
                            ON A.CNTR_ID = B.WCT_ID
                            LEFT JOIN WMST000T C
                            ON B.CNTR_ID = C.CNTR_ID
                            LEFT JOIN GMST220T D
                            ON A.GL_ACNT_CD = D.GL_ACNT_CD
                            LEFT JOIN GMST210T E
                            ON D.MAAC_ACNT_CD = E.MAAC_ACNT_CD
                            WHERE 1=1
                            <![CDATA[
                                AND A.SND_DATE = (SELECT MAX(SND_DATE) FROM SSIF530T WHERE CRIT_YEAR = A.CRIT_YEAR AND CRIT_MONTH = A.CRIT_MONTH )
                                AND A.CRIT_YEAR||A.CRIT_MONTH < TO_CHAR(SYSDATE,'YYYYMM')
                            ]]>
                            GROUP BY A.CRIT_YEAR||A.CRIT_MONTH,F.DEPT_ID,C.BSNS_CLSF_CD,MAAC_PROFIT,FCST_PAL_ID,A.PRJT_ID, B.WCT_ID, F.EMP_ID,F.EMP_NM,PRJT_NM,DEPT_NM
                        )A
                        GROUP BY A.CRIT_YAM,FCST_PAL_ID,BLTO_DEPT_ID,BSNS_CLSF_CD,A.PRJT_ID,A.WCT_ID,A.EMP_ID,A.EMP_NM,PRJT_NM,DEPT_NM
                )A
                LEFT JOIN
                (
                    SELECT
                        B.FCST_PAL_ID,B.P_TYPE,SELL_AMT/SUM_AMT AS RATE,
                        NVL(DECODE(SUM_BUY_AMT,NVL(NULL,0),0,BUY_AMT/SUM_BUY_AMT),0) AS BUY_RATE
                    FROM (
                        SELECT FCST_PAL_ID,SUM(SELL_AMT) AS SUM_AMT,SUM(BUY_AMT) AS SUM_BUY_AMT
                        FROM TT000V GROUP BY FCST_PAL_ID
                    )A
                    LEFT JOIN TT000V B
                    ON A.FCST_PAL_ID = B.FCST_PAL_ID
                    WHERE SELL_AMT/SUM_AMT IS NOT NULL

                )B
                ON A.FCST_PAL_ID = B.FCST_PAL_ID
                LEFT JOIN (SELECT * FROM ACOM010T WHERE COM_GRP_CD = 'PM04')C
                ON SUBSTR(B.P_TYPE,1,2) = C.COM_CD
                LEFT JOIN APRJ000T PRJT
                ON A.PRJT_ID = PRJT.PRJT_ID
                LEFT JOIN CMST000T CUST
                ON PRJT.LAST_CUST_ID = CUST.CUST_ID


                UNION ALL

                --현재달은 이걸로 픽스

                --현재달은 이걸로 픽스
                SELECT A.CRIT_YAM ,A.BLTO_DEPT_ID AS DEPT_ID ,DEPT_NM ,A.SLS_EMP_ID AS EMP_ID ,A.EMP_NM,A.PRJT_ID,A.PRJT_NM
                    ,A.FCST_PAL_ID, WCT_ID, A.BSNS_CLSF_CD,C.HGRK_COM_CD AS PROD_DST_CD,IBIZ_COM_CD_NM('PROD_DST_CD',C.HGRK_COM_CD) PROD_DST_CD_NM
                    ,SUBSTR(B.P_TYPE,1,2) AS PROD_TYPE_CD,SUBSTR(B.P_TYPE,2,2) AS GODS_CLSF_CD,A.LAST_CUST_ID,CUST.CUST_NM AS LAST_CUST_NM, PRJT.PRJT_TYPE_CD
                    ,ROUND(DECODE(B.RATE,NULL,A.SELL_AMT, A.SELL_AMT*B.RATE),0) AS SELL_AMT
                    ,ROUND(DECODE(B.BUY_RATE,NULL,A.BUY_AMT, A.BUY_AMT*B.BUY_RATE),0) AS BUY_AMT
                FROM (

                    SELECT
                        A.CRIT_YAM,FCST_PAL_ID,BLTO_DEPT_ID,DEPT_NM,BSNS_CLSF_CD,SUM(SELL_AMT)AS SELL_AMT,SUM(BUY_AMT) AS BUY_AMT,SLS_EMP_ID,EMP_NM,PRJT_ID,PRJT_NM,A.LAST_CUST_ID, WCT_ID
                    FROM
                    (
                        SELECT
                            a.CRIT_YEAR||A.CRIT_MONTH AS CRIT_YAM
                            ,FCST_PAL_ID
                            ,B.WCT_ID
                            ,F.SLS_DEPT_ID AS BLTO_DEPT_ID
                            ,DEPT_NM
                            ,F.PRJT_ID
                            ,F.PRJT_NM
                            ,F.SLS_EMP_ID
                            ,EMP_NM
                            ,C.BSNS_CLSF_CD
                            ,F.LAST_CUST_ID
                            ,CASE WHEN E.MAAC_PROFIT = 'PROF0001' THEN  SUM(NVL(RSL_AMT,0)) END AS SELL_AMT
                            ,CASE WHEN E.MAAC_PROFIT IN ('PROF0002','PROF0003','PROF0004','PROF0005') THEN  SUM(NVL(RSL_AMT,0)) END AS BUY_AMT
                        FROM SSIF530T A
                        LEFT JOIN WMST100T B
                        ON A.CNTR_ID = B.WCT_ID
                        LEFT JOIN WMST000T C
                        ON B.CNTR_ID = C.CNTR_ID
                        LEFT JOIN GMST220T D
                        ON A.GL_ACNT_CD = D.GL_ACNT_CD
                        LEFT JOIN GMST210T E
                        ON D.MAAC_ACNT_CD = E.MAAC_ACNT_CD
                        LEFT JOIN APRJ000T F
                        ON A.PRJT_ID = F.PRJT_ID
                        LEFT JOIN HMST100T G
                        ON F.SLS_DEPT_ID = G.DEPT_ID
                        LEFT JOIN HMST300T H
                        ON F.SLS_EMP_ID = H.EMP_ID

                        WHERE 1=1
                        <![CDATA[
                            AND A.SND_DATE = (SELECT MAX(SND_DATE) FROM SSIF530T WHERE CRIT_YEAR = A.CRIT_YEAR AND CRIT_MONTH = A.CRIT_MONTH )
                            AND A.CRIT_YEAR||A.CRIT_MONTH = TO_CHAR(SYSDATE,'YYYYMM')
                        ]]>
                    GROUP BY A.CRIT_YEAR||A.CRIT_MONTH ,F.SLS_DEPT_ID,C.BSNS_CLSF_CD, MAAC_PROFIT,FCST_PAL_ID, B.WCT_ID, DEPT_NM,F.SLS_EMP_ID,EMP_NM,F.PRJT_ID,F.PRJT_NM ,F.LAST_CUST_ID
                    )A
                    GROUP BY A.CRIT_YAM,FCST_PAL_ID,BLTO_DEPT_ID,BSNS_CLSF_CD,DEPT_NM,SLS_EMP_ID,EMP_NM,PRJT_ID, WCT_ID, PRJT_NM,A.LAST_CUST_ID
                )A
                LEFT JOIN
                (
                    SELECT
                        B.FCST_PAL_ID,
                        B.P_TYPE,
                        SELL_AMT/SUM_AMT AS RATE,
                        NVL(DECODE(SUM_BUY_AMT,NVL(NULL,0),0,BUY_AMT/SUM_BUY_AMT),0) AS BUY_RATE
                    FROM (
                            SELECT FCST_PAL_ID,SUM(SELL_AMT) AS SUM_AMT,SUM(BUY_AMT) AS SUM_BUY_AMT
                            FROM TT000V GROUP BY FCST_PAL_ID
                    )A
                    LEFT JOIN TT000V B
                    ON A.FCST_PAL_ID = B.FCST_PAL_ID
                    WHERE SELL_AMT/SUM_AMT IS NOT NULL
                )B
                ON A.FCST_PAL_ID = B.FCST_PAL_ID
                LEFT JOIN (SELECT * FROM ACOM010T WHERE COM_GRP_CD = 'PM04')C
                ON SUBSTR(B.P_TYPE,1,2) = C.COM_CD
                LEFT JOIN CMST000T CUST
                ON A.LAST_CUST_ID = CUST.CUST_ID
                LEFT JOIN APRJ000T PRJT
                ON A.PRJT_ID = PRJT.PRJT_ID
            )A
            WHERE 1=1
            AND SELL_CRIT_YAM BETWEEN #{fromDate} AND #{toDate} -- 조회조건_기간-- 조회조건_기간
            AND WCT_ID IS NOT NULL
            <if test='brslDstCd == "B" '>
                AND (SELL_RSL_AMT IS NOT NULL AND SELL_RSL_AMT != 0)   --매출
            </if>
            <if test='brslDstCd == "C" '>
                AND  (BUY_RSL_AMT IS NOT NULL AND BUY_RSL_AMT != 0)   --매입
            </if>
            <if test='prodDstCd != null and prodDstCd != "" '>
                AND PROD_DST_CD = #{prodDstCd} -- 조회조건_상품구분
            </if>
            <if test='bsnsClsfCd != null and bsnsClsfCd != "" '>
                AND BSNS_CLSF_CD = #{bsnsClsfCd} -- 조회조건_사업분류
            </if>
            <if test='slsEmpId != null'>
                AND EMP_ID = #{slsEmpId} -- 조회조건_영업대표
            </if>
            <if test='slsDeptId != null and slsDeptId != "" '>
            AND A.SLS_DEPT_ID  in (
                                    SELECT DEPT_ID FROM HMST110T
                                    WHERE SELL_OCR_YN = 'Y' -- 매출발생부서
                                    <![CDATA[
                                            AND SUBSTR(ORG_CLOSE_DATE,1,4) >= #{critYear}
                                    ]]>
                                    AND CRIT_YEAR = #{critYear}
                                    START WITH
                                    DEPT_ID = #{slsDeptId}
                                    CONNECT BY
                                    PRIOR DEPT_ID = HGRK_DEPT_ID
            )    -- 조회조건_영업부서
            </if>
            <if test='prjtTypeCd != null and prjtTypeCd != "" '>
                AND A.PRJT_TYPE_CD = #{prjtTypeCd}
            </if>

                <if test='orderTypeCd == "CP" or ( orderTypeCd == null)'>
                    ORDER BY LAST_CUST_NM, PRJT_NM--, CNTR_DATE  -- 정렬기준: 고객명+프로젝트명
                </if>
                <if test='orderTypeCd == "SD" '>
                    ORDER BY SELL_CRIT_YAM, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 발생시기
                </if>

                <if test='orderTypeCd == "RA" '>
                    <if test='brslDstCd == "B" '>
                        ORDER BY SELL_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 실적금액(매출)
                    </if>
                    <if test='brslDstCd == "C" '>
                        ORDER BY BUY_RSL_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 실적금액(매입)
                    </if>
                </if>

                ) T
            ) S
            WHERE ROWNUMBER BETWEEN #{pageSize} * (#{pageNumber} - 1) + 1
            AND #{pageSize} * (#{pageNumber} - 1) + #{pageSize}


    </select>



    <!-- ERP 실적 수주 조회 -->
    <select id="selectSalesRealWCTReportDetailList"
            parameterType="com.ibiz.api.model.BusinessResultSearchVO"
            resultType="com.ibiz.api.model.SalesReportVO">

        SELECT * FROM (
        SELECT COUNT(1) OVER() AS TOTAL_CNT, ROWNUM AS ROWNUMBER, T.* FROM (
        SELECT *
        FROM
                (
            SELECT SUBSTR(CNTR_DATE ,1,6) AS SELL_CRIT_YAM, C.BLTO_DEPT_ID AS SLS_DEPT_ID,DEPT.DEPT_NM,PRJT.SLS_EMP_ID,EMP.EMP_NM
                    ,CNTR_ID
                    ,A.PRJT_ID
                    ,PRJT.PRJT_NM
                    ,PRJT.PRJT_TYPE_CD
                    ,A.FCST_PAL_ID
                    ,'R1' BPLN_DST_CD -- R1.사업실적
                    ,'AR' BRSL_DTL_DST_CD -- AR.수주실적
                    ,BSNS_CLSF_CD
                    ,F.HGRK_COM_CD AS PROD_DST_CD
                    ,IBIZ_COM_CD_NM('PROD_DST_CD',F.HGRK_COM_CD) PROD_DST_CD_NM
                    ,SUBSTR(E.P_TYPE,1,2) AS PROD_TYPE_CD
                    ,SUBSTR(E.P_TYPE,2,2) AS GODS_CLSF_CD
                    ,PRJT.LAST_CUST_ID,CUST.CUST_NM AS LAST_CUST_NM
                    ,ROUND(DECODE(E.RATE,NULL,A.CNTR_AMT, A.CNTR_AMT*E.RATE),0) AS CNTR_AMT
            FROM WMST000T A
            LEFT JOIN APRJ000T B
            ON A.PRJT_ID = B.PRJT_ID
            LEFT JOIN HMST300T C
            ON B.SLS_EMP_ID = C.EMP_ID
            LEFT JOIN APRJ000T PRJT
            ON A.PRJT_ID = PRJT.PRJT_ID
            LEFT JOIN HMST300T EMP
            ON A.SLS_EMP_ID = EMP.EMP_ID
            LEFT JOIN HMST100T DEPT
            ON EMP.BLTO_DEPT_ID = DEPT.DEPT_ID
            LEFT JOIN (SELECT
                B.FCST_PAL_ID,
                B.P_TYPE,
                SELL_AMT/SUM_AMT AS RATE,
                NVL(DECODE(SUM_BUY_AMT,NVL(NULL,0),0,BUY_AMT/SUM_BUY_AMT),0) AS BUY_RATE
            FROM (
            SELECT FCST_PAL_ID,SUM(SELL_AMT) AS SUM_AMT,SUM(BUY_AMT) AS SUM_BUY_AMT
            FROM TT000V GROUP BY FCST_PAL_ID
            )A
            LEFT JOIN TT000V B
            ON A.FCST_PAL_ID = B.FCST_PAL_ID
             WHERE SELL_AMT/SUM_AMT IS NOT NULL
            )E
            ON A.FCST_PAL_ID = E.FCST_PAL_ID
            LEFT JOIN (SELECT * FROM ACOM010T WHERE COM_GRP_CD = 'PM04')F
            ON SUBSTR(E.P_TYPE,1,2) = F.COM_CD
            LEFT JOIN CMST000T CUST
            ON PRJT.LAST_CUST_ID = CUST.CUST_ID
        )A
        WHERE 1=1
        AND CNTR_AMT != 0
        AND SELL_CRIT_YAM BETWEEN #{fromDate} AND #{toDate} -- 조회조건_기간
        <if test='prodDstCd != null and prodDstCd != "" '>
            AND PROD_DST_CD = #{prodDstCd} -- 조회조건_상품구분
        </if>
        <if test='bsnsClsfCd != null and bsnsClsfCd != "" '>
            AND BSNS_CLSF_CD = #{bsnsClsfCd} -- 조회조건_사업분류
        </if>
        <if test='slsEmpId != null'>
            AND EMP_ID = #{slsEmpId} -- 조회조건_영업대표
        </if>
        <if test='slsDeptId != null and slsDeptId != "" '>
        AND A.SLS_DEPT_ID  in (
                                SELECT DEPT_ID FROM HMST110T
                                WHERE SELL_OCR_YN = 'Y' -- 매출발생부서
                                <![CDATA[
                                        AND SUBSTR(ORG_CLOSE_DATE,1,4) >= #{critYear}
                                ]]>
                                AND CRIT_YEAR = #{critYear}
                                START WITH
                                DEPT_ID = #{slsDeptId}
                                CONNECT BY
                                PRIOR DEPT_ID = HGRK_DEPT_ID
        )    -- 조회조건_영업부서
        </if>
        <if test='prjtTypeCd != null and prjtTypeCd != "" '>
            AND A.PRJT_TYPE_CD = #{prjtTypeCd}
        </if>

                <if test='orderTypeCd == "CP" or ( orderTypeCd == null)'>
                    ORDER BY LAST_CUST_NM, PRJT_NM  -- 정렬기준: 고객명+프로젝트명
                </if>
                <if test='orderTypeCd == "SD" '>
                    ORDER BY SELL_CRIT_YAM, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 발생시기
                </if>
                <if test='orderTypeCd == "RA" '>
                    ORDER BY CNTR_AMT DESC, LAST_CUST_NM, PRJT_NM  -- 정렬기준: 실적금액
                </if>

        ) T
        ) S
        WHERE ROWNUMBER BETWEEN #{pageSize} * (#{pageNumber} - 1) + 1
        AND #{pageSize} * (#{pageNumber} - 1) + #{pageSize}


    </select>


    <!--

        INSERT

    -->

    <!-- 월간보고서 등록-->
    <insert id="insertMonthlyWork"
            parameterType="com.ibiz.api.model.MonthlyWorkVO">

        INSERT INTO BPIP260T (
        CRIT_YAM,
        SLS_DEPT_ID,
        BDCT_CONT,
        REG_EMP_ID,
        REG_DT,
        CHG_EMP_ID,
        CHG_DT
        ) VALUES (
        #{critYam},
        #{slsDeptId},
        #{bdctCont},
        #{regEmpId},
        SYSDATE,
        #{chgEmpId},
        SYSDATE
        )

    </insert>

    <!-- 사업프로젝트 기본 등록 -->
    <insert id="insertBizPrjtInfo"
            parameterType="com.ibiz.api.model.BizProjectInfoVO">
        INSERT
        INTO BPRJ000T (
            PRJT_ID,
            SEQ,
            BSNS_DEPT_ID,
            BSNS_EMP_ID,
            BEXC_START_DATE,
            BEXC_END_DATE,
            BSNS_PRGS_STAT_CD,
            REG_EMP_ID,
            REG_DT,
            CHG_EMP_ID,
            CHG_DT
        )
         VALUES (
            #{prjtId},
            #{seq},
            #{bsnsDeptId},
            #{bsnsEmpId},
            #{bexcStartDate},
            #{bexcEndDate},
            #{bsnsPrgsStatCd},
            #{regEmpId},
            SYSDATE,
            #{chgEmpId},
            SYSDATE
         )
    </insert>

    <!-- 사업프로젝트 보고내역 등록 -->
    <insert id="insertBizPrjtRprtBkdnInfo"
            parameterType="com.ibiz.api.model.BizProjectReportVO">
        INSERT
        INTO BPRJ010T (
            PRJT_ID,
            SEQ,
            BSNS_RPRT_START_DATE,
            BSNS_RPRT_END_DATE,
            RPRT_YN,
            RPRT_CONT,
            BSNS_PRGS_STAT_CD,
            CHG_EMP_ID,
            CHG_DT
        )
         VALUES (
            #{prjtId},
            #{seq},
            #{bsnsRprtStartDate},
            #{bsnsRprtEndDate},
            #{rprtYn},
            #{rprtCont},
            #{bsnsPrgsStatCd},
            #{chgEmpId},
            SYSDATE
         )
    </insert>

    <!--

		UPDATE

	-->

    <!-- 월간보고서 수정-->
    <update id="updateMonthlyWork"
            parameterType="com.ibiz.api.model.MonthlyWorkVO">

        UPDATE BPIP260T
        SET
        BDCT_CONT = #{bdctCont},
        CHG_EMP_ID = #{chgEmpId},
        CHG_DT = SYSDATE
        WHERE
        SLS_DEPT_ID = #{slsDeptId}
        AND   CRIT_YAM = #{critYam}

    </update>

    <!-- 사업프로젝트 기본 수정-->
    <update id="updateBizPrjtInfo"
            parameterType="com.ibiz.api.model.BizProjectInfoVO">
        UPDATE BPRJ000T
        SET BSNS_DEPT_ID = #{bsnsDeptId},
            BSNS_EMP_ID = #{bsnsEmpId},
            BEXC_START_DATE = #{bexcStartDate},
            BEXC_END_DATE = #{bexcEndDate},
            BSNS_PRGS_STAT_CD = #{bsnsPrgsStatCd},
            CHG_EMP_ID = #{chgEmpId},
            CHG_DT = SYSDATE
        WHERE
            PRJT_ID = #{prjtId}
            AND SEQ = #{seq}
    </update>

    <!-- 사업프로젝트 보고내역 수정 -->
    <update id="updateBizPrjtRprtBkdnInfo"
            parameterType="com.ibiz.api.model.BizProjectReportVO">
        UPDATE BPRJ010T
        SET RPRT_YN = #{rprtYn},
        <if test="rprtCont != null and rprtCont != ''">
            RPRT_CONT = #{rprtCont},
        </if>
        <if test="bsnsPrgsStatCd != null and bsnsPrgsStatCd != ''">
            BSNS_PRGS_STAT_CD = #{bsnsPrgsStatCd},
        </if>
            CHG_EMP_ID = #{chgEmpId},
            CHG_DT = SYSDATE
        WHERE
            PRJT_ID = #{prjtId}
            AND SEQ = #{seq}
            AND BSNS_RPRT_START_DATE = #{bsnsRprtStartDate}
    </update>

    <!--

		DELETE

	-->

    <!-- 월간보고서 삭제-->
    <delete id="deleteMonthlyWork"
            parameterType="com.ibiz.api.model.MonthlyWorkVO">
        DELETE FROM
        BPIP260T
        WHERE
        SLS_DEPT_ID = #{slsDeptId}
        AND   CRIT_YAM = #{critYam}
    </delete>


    <!-- 사업프로젝트 기본 삭제 -->
    <delete id="deleteBizPrjtInfo"
            parameterType="com.ibiz.api.model.BizProjectInfoVO">
        DELETE FROM BPRJ000T
        WHERE PRJT_ID = #{prjtId}
        AND SEQ = #{seq}
    </delete>

    <!-- 사업프로젝트 보고내역 삭제 -->
    <delete id="deleteBizPrjtRprtBkdnInfo"
            parameterType="com.ibiz.api.model.BizProjectReportVO">
        DELETE FROM BPRJ010T
        WHERE PRJT_ID = #{prjtId}
            AND SEQ = #{seq}
        <if test='bsnsRprtStartDate != null and bsnsRprtStartDate != "" '>
            AND BSNS_RPRT_START_DATE = #{bsnsRprtStartDate}
        </if>

    </delete>


</mapper>